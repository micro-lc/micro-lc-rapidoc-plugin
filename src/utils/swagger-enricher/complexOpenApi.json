{
  "openapi": "3.0.0",
  "info": {
    "version": "05d1af1bc18e592ff834f18982daedfb04b5a941",
    "title": "Demo",
    "description": "Demo project for Mia-Platform Console"
  },
  "paths": {
    "/generate/orders": {
      "post": {
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "numberOfItems": {
                    "type": "number"
                  },
                  "timeSpan": {
                    "type": "number"
                  },
                  "orderedAt": {
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "numberOfItems": {
                    "type": "number"
                  },
                  "timeSpan": {
                    "type": "number"
                  },
                  "orderedAt": {
                    "type": "number"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {},
                    "additionalProperties": true
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "parameters": [
          {
            "required": false,
            "name": "fromStatus",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "toStatus",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {},
                "additionalProperties": true
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number"
                }
              }
            }
          }
        }
      }
    },
    "/mail/send/split-recipients": {
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/mail/send": {
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/mail/": {
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/api/charts/dashboards/charts/dashboards/{dashboardId}": {
      "get": {
        "parameters": [
          {
            "name": "additionalProperties",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "rows",
            "in": "path",
            "required": true,
            "style": "simple",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "additionalProperties": true,
                  "id": {
                    "type": "string"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "rows"
                  ],
                  "additionalProperties": true,
                  "properties": {
                    "rows": {
                      "type": "array",
                      "description": "Rows descriptor for the given dashboard. It contains the configuration for each page row.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "charts": {
                            "type": "array",
                            "description": "It contains the analytics list for each dashboard row.",
                            "items": {
                              "type": "object",
                              "required": [
                                "id",
                                "options",
                                "constructorType"
                              ],
                              "additionalProperties": true,
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Analytics id"
                                },
                                "actions": {
                                  "type": "array",
                                  "description": "array of actions",
                                  "items": {
                                    "type": "object",
                                    "required": [
                                      "label",
                                      "url"
                                    ],
                                    "description": "actions can be used to access APIs while browsing the chart",
                                    "properties": {
                                      "label": {
                                        "type": "string",
                                        "description": "Title to apply to the link button"
                                      },
                                      "url": {
                                        "type": "string",
                                        "description": "API url"
                                      },
                                      "openInNewTab": {
                                        "type": "boolean",
                                        "description": "if true open the url on a new tab"
                                      },
                                      "applyActiveFilters": {
                                        "type": "boolean",
                                        "description": "if true applies the active filters to the url"
                                      }
                                    }
                                  }
                                },
                                "options": {
                                  "type": "object",
                                  "properties": {
                                    "chart": {
                                      "type": "object",
                                      "properties": {
                                        "type": {
                                          "type": "string",
                                          "enum": [
                                            "columns",
                                            "bar"
                                          ],
                                          "description": "Chart type for charts with constructorType = chart"
                                        },
                                        "map": {
                                          "type": "string",
                                          "description": "File Map name for charts with constructorType = mapChart"
                                        }
                                      },
                                      "additionalProperties": true
                                    },
                                    "title": {
                                      "type": "object",
                                      "description": "Analytics title",
                                      "properties": {
                                        "text": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "subtitle": {
                                      "type": "object",
                                      "description": "Analytics subtitle",
                                      "properties": {
                                        "text": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "series": {
                                      "type": "array",
                                      "description": "Analytics series data",
                                      "items": {
                                        "type": "object",
                                        "required": [
                                          "id",
                                          "endpointData",
                                          "name"
                                        ],
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "Serie's data id"
                                          },
                                          "endpointData": {
                                            "type": "string",
                                            "description": "Serie's endpoint to call in order to retrieve data"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "Serie's name"
                                          },
                                          "markerOptions": {
                                            "type": "object",
                                            "additionalProperties": true,
                                            "properties": {
                                              "cluster": {
                                                "type": "object",
                                                "required": [
                                                  "type"
                                                ],
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "enum": [
                                                      "weighted",
                                                      "single"
                                                    ],
                                                    "description": "Cluster type"
                                                  },
                                                  "color": {
                                                    "type": "string",
                                                    "description": "Color of the cluster group marker"
                                                  },
                                                  "textColor": {
                                                    "type": "string",
                                                    "description": "Color of the text displayed in the cluster group marker"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        },
                                        "additionalProperties": true
                                      }
                                    },
                                    "colorAxis": {
                                      "type": "object",
                                      "description": "To display different colors with highmaps or TileMapChart",
                                      "properties": {
                                        "isDataRelative": {
                                          "type": "boolean",
                                          "description": "indicates whether data are expressed as a percentage or not"
                                        }
                                      },
                                      "additionalProperties": true
                                    }
                                  },
                                  "additionalProperties": true
                                },
                                "constructorType": {
                                  "type": "string",
                                  "description": "Analytics chart type",
                                  "enum": [
                                    "tileMapChart",
                                    "mapChart",
                                    "chart",
                                    "stockChart",
                                    "statisticChart"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/functions/abort-orders-slack-notifications": {
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/functions/abort-orders": {
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/functions/filter-by-province-code": {
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/functions/handle-null-response": {
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/functions/handle-zero-value": {
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/functions/mail-aborted-order": {
      "post": {
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/files/": {
      "patch": {
        "summary": "Update the items of the files collection that match the query",
        "tags": [
          "Files"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e419",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "size",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "location",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "file",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body7"
        },
        "responses": {
          "200": {
            "description": "the number of documents that were modified",
            "content": {
              "*/*": {
                "schema": {
                  "type": "number",
                  "description": "the number of documents that were modified"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get a list of files",
        "description": "The list can be filtered specifying the following parameters",
        "tags": [
          "Files"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e417",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "size",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "location",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "file",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|size|location|file),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|size|location|file)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "Limits the number of documents, max 200 elements, minimum 1",
            "required": false,
            "name": "_l",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 25
            }
          },
          {
            "description": "Skip the specified number of documents",
            "required": false,
            "name": "_sk",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
            "required": false,
            "name": "_s",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|size|location|file)$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "_id",
                        "example": "60a24a2a28a75f0013d7e416"
                      },
                      "creatorId": {
                        "type": "string",
                        "description": "creatorId"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-16T12:00:00.000Z",
                        "description": "createdAt"
                      },
                      "updaterId": {
                        "type": "string",
                        "description": "updaterId"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-16T12:00:00.000Z",
                        "description": "updatedAt"
                      },
                      "__STATE__": {
                        "type": "string",
                        "description": "__STATE__"
                      },
                      "name": {
                        "type": "string"
                      },
                      "size": {
                        "type": "number"
                      },
                      "location": {
                        "type": "string"
                      },
                      "file": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new item to the files collection",
        "tags": [
          "Files"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "size": {
                    "type": "number"
                  },
                  "location": {
                    "type": "string"
                  },
                  "file": {
                    "type": "string"
                  },
                  "__STATE__": {
                    "type": "string",
                    "enum": [
                      "PUBLIC",
                      "DRAFT",
                      "TRASH",
                      "DELETED"
                    ],
                    "description": "The state of the document",
                    "default": "PUBLIC"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e49a"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete items from the files collection",
        "tags": [
          "Files"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "size",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "location",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "file",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/files/upsert-one": {
      "post": {
        "summary": "Update an item of files if it is present, otherwise insert it",
        "tags": [
          "Files"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "size",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "location",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "file",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "$set": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "size": {
                        "type": "number"
                      },
                      "location": {
                        "type": "string"
                      },
                      "file": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$unset": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "boolean",
                        "enum": [
                          true
                        ]
                      },
                      "size": {
                        "type": "boolean",
                        "enum": [
                          true
                        ]
                      },
                      "location": {
                        "type": "boolean",
                        "enum": [
                          true
                        ]
                      },
                      "file": {
                        "type": "boolean",
                        "enum": [
                          true
                        ]
                      }
                    },
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$inc": {
                    "type": "object",
                    "properties": {
                      "size": {
                        "type": "number"
                      }
                    },
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$mul": {
                    "type": "object",
                    "properties": {
                      "size": {
                        "type": "number"
                      }
                    },
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$currentDate": {
                    "type": "object",
                    "properties": {},
                    "additionalProperties": false
                  },
                  "$push": {
                    "type": "object",
                    "properties": {},
                    "additionalProperties": false
                  },
                  "$setOnInsert": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "size": {
                        "type": "number"
                      },
                      "location": {
                        "type": "string"
                      },
                      "file": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e416"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "name": {
                      "type": "string"
                    },
                    "size": {
                      "type": "number"
                    },
                    "location": {
                      "type": "string"
                    },
                    "file": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/files/export": {
      "get": {
        "summary": "Export the files collection",
        "description": "The exported documents are sent as newline separated JSON objects to facilitate large dataset streaming and parsing",
        "tags": [
          "Files"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e418",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "size",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "location",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "file",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|size|location|file),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|size|location|file)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "Limits the number of documents",
            "required": false,
            "name": "_l",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "description": "Skip the specified number of documents",
            "required": false,
            "name": "_sk",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
            "required": false,
            "name": "_s",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|size|location|file)$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/files/{id}": {
      "get": {
        "summary": "Find one item from the files collection by ID",
        "tags": [
          "Files"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "size",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "location",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "file",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|size|location|file),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|size|location|file)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e416"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "name": {
                      "type": "string"
                    },
                    "size": {
                      "type": "number"
                    },
                    "location": {
                      "type": "string"
                    },
                    "file": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an item from the files collection",
        "tags": [
          "Files"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "size",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "location",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "file",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update an item of the files collection by ID",
        "tags": [
          "Files"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "size",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "location",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "file",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body7"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e416"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "name": {
                      "type": "string"
                    },
                    "size": {
                      "type": "number"
                    },
                    "location": {
                      "type": "string"
                    },
                    "file": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/files/count": {
      "get": {
        "summary": "Count the number of files",
        "tags": [
          "Files"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e419",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "size",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "location",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "file",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          }
        }
      }
    },
    "/v2/files/bulk": {
      "post": {
        "summary": "Insert new files",
        "tags": [
          "Files"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "size": {
                      "type": "number"
                    },
                    "location": {
                      "type": "string"
                    },
                    "file": {
                      "type": "string"
                    },
                    "__STATE__": {
                      "type": "string",
                      "enum": [
                        "PUBLIC",
                        "DRAFT",
                        "TRASH",
                        "DELETED"
                      ],
                      "description": "The state of the document",
                      "default": "PUBLIC"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "Hexadecimal identifier of the document in the collection",
                        "example": "60a24a2a28a75f0013d7e49b"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update multiple items of files, each one with its own modifications",
        "tags": [
          "Files"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "pattern": "^[a-fA-F\\d]{24}$",
                          "description": "Hexadecimal identifier of the document in the collection",
                          "example": "60a24a2a28a75f0013d7e49c"
                        },
                        "_st": {
                          "type": "string",
                          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
                          "default": "PUBLIC",
                          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list"
                        },
                        "creatorId": {
                          "type": "string",
                          "description": "creatorId"
                        },
                        "createdAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "createdAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "updaterId": {
                          "type": "string",
                          "description": "updaterId"
                        },
                        "updatedAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "updatedAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "name": {
                          "type": "string"
                        },
                        "size": {
                          "type": "number"
                        },
                        "location": {
                          "type": "string"
                        },
                        "file": {
                          "type": "string"
                        },
                        "_q": {
                          "type": "string",
                          "description": "Additional query part to forward to MongoDB"
                        }
                      },
                      "additionalProperties": false
                    },
                    "update": {
                      "type": "object",
                      "properties": {
                        "$set": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "size": {
                              "type": "number"
                            },
                            "location": {
                              "type": "string"
                            },
                            "file": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$unset": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "boolean",
                              "enum": [
                                true
                              ]
                            },
                            "size": {
                              "type": "boolean",
                              "enum": [
                                true
                              ]
                            },
                            "location": {
                              "type": "boolean",
                              "enum": [
                                true
                              ]
                            },
                            "file": {
                              "type": "boolean",
                              "enum": [
                                true
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$inc": {
                          "type": "object",
                          "properties": {
                            "size": {
                              "type": "number"
                            }
                          },
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$mul": {
                          "type": "object",
                          "properties": {
                            "size": {
                              "type": "number"
                            }
                          },
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$currentDate": {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": false
                        },
                        "$push": {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "filter",
                    "update"
                  ]
                },
                "minItems": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          }
        }
      }
    },
    "/v2/files/{id}/state": {
      "post": {
        "summary": "Change state of an item of files",
        "tags": [
          "Files"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "size",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "location",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "file",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body8"
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/files/state": {
      "post": {
        "summary": "Change state of items of files",
        "tags": [
          "Files"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "required": [
                        "_id"
                      ],
                      "properties": {
                        "_id": {
                          "type": "string",
                          "pattern": "^[a-fA-F\\d]{24}$",
                          "description": "Hexadecimal identifier of the document in the collection",
                          "example": "60a24a2a28a75f0013d7e49d"
                        },
                        "creatorId": {
                          "type": "string",
                          "description": "creatorId"
                        },
                        "createdAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "createdAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "updaterId": {
                          "type": "string",
                          "description": "updaterId"
                        },
                        "updatedAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "updatedAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "name": {
                          "type": "string"
                        },
                        "size": {
                          "type": "number"
                        },
                        "location": {
                          "type": "string"
                        },
                        "file": {
                          "type": "string"
                        }
                      }
                    },
                    "stateTo": {
                      "type": "string",
                      "enum": [
                        "PUBLIC",
                        "DRAFT",
                        "TRASH",
                        "DELETED"
                      ]
                    }
                  },
                  "required": [
                    "filter",
                    "stateTo"
                  ],
                  "additionalProperties": false
                },
                "minItems": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Number of updated files",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "Number of updated files"
                }
              }
            }
          }
        }
      }
    },
    "/v2/riders/": {
      "get": {
        "summary": "Get a list of riders",
        "description": "The list can be filtered specifying the following parameters",
        "tags": [
          "Riders"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e467",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "surname",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "phone number",
            "required": false,
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "3 star, 2 star, 1 star",
            "required": false,
            "name": "ratings",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Es: bike, scooter, car, etc...",
            "required": false,
            "name": "trasportType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|surname|name|email|phone|ratings|position|trasportType|image),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|surname|name|email|phone|ratings|position|trasportType|image)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "Limits the number of documents, max 200 elements, minimum 1",
            "required": false,
            "name": "_l",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 25
            }
          },
          {
            "description": "Skip the specified number of documents",
            "required": false,
            "name": "_sk",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
            "required": false,
            "name": "_s",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|surname|name|email|phone|ratings|trasportType)$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "_id",
                        "example": "60a24a2a28a75f0013d7e466"
                      },
                      "creatorId": {
                        "type": "string",
                        "description": "creatorId"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-16T12:00:00.000Z",
                        "description": "createdAt"
                      },
                      "updaterId": {
                        "type": "string",
                        "description": "updaterId"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-16T12:00:00.000Z",
                        "description": "updatedAt"
                      },
                      "__STATE__": {
                        "type": "string",
                        "description": "__STATE__"
                      },
                      "surname": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "number",
                        "description": "phone number"
                      },
                      "ratings": {
                        "type": "string",
                        "description": "3 star, 2 star, 1 star"
                      },
                      "position": {
                        "type": "array",
                        "items": {
                          "type": "number"
                        }
                      },
                      "trasportType": {
                        "type": "string",
                        "description": "Es: bike, scooter, car, etc..."
                      },
                      "image": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new item to the riders collection",
        "tags": [
          "Riders"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "surname": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "number",
                    "description": "phone number"
                  },
                  "ratings": {
                    "type": "string",
                    "description": "3 star, 2 star, 1 star"
                  },
                  "position": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    },
                    "minItems": 2,
                    "maxItems": 3
                  },
                  "trasportType": {
                    "type": "string",
                    "description": "Es: bike, scooter, car, etc..."
                  },
                  "image": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "__STATE__": {
                    "type": "string",
                    "enum": [
                      "PUBLIC",
                      "DRAFT",
                      "TRASH",
                      "DELETED"
                    ],
                    "description": "The state of the document",
                    "default": "DRAFT"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2b28a75f0013d7e4c2"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete items from the riders collection",
        "tags": [
          "Riders"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "surname",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "phone number",
            "required": false,
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "3 star, 2 star, 1 star",
            "required": false,
            "name": "ratings",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Es: bike, scooter, car, etc...",
            "required": false,
            "name": "trasportType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update the items of the riders collection that match the query",
        "tags": [
          "Riders"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e469",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "surname",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "phone number",
            "required": false,
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "3 star, 2 star, 1 star",
            "required": false,
            "name": "ratings",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Es: bike, scooter, car, etc...",
            "required": false,
            "name": "trasportType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body2"
        },
        "responses": {
          "200": {
            "description": "the number of documents that were modified",
            "content": {
              "*/*": {
                "schema": {
                  "type": "number",
                  "description": "the number of documents that were modified"
                }
              }
            }
          }
        }
      }
    },
    "/v2/riders/export": {
      "get": {
        "summary": "Export the riders collection",
        "description": "The exported documents are sent as newline separated JSON objects to facilitate large dataset streaming and parsing",
        "tags": [
          "Riders"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e468",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "surname",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "phone number",
            "required": false,
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "3 star, 2 star, 1 star",
            "required": false,
            "name": "ratings",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Es: bike, scooter, car, etc...",
            "required": false,
            "name": "trasportType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|surname|name|email|phone|ratings|position|trasportType|image),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|surname|name|email|phone|ratings|position|trasportType|image)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "Limits the number of documents",
            "required": false,
            "name": "_l",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "description": "Skip the specified number of documents",
            "required": false,
            "name": "_sk",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
            "required": false,
            "name": "_s",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|surname|name|email|phone|ratings|trasportType)$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/riders/{id}": {
      "get": {
        "summary": "Find one item from the riders collection by ID",
        "tags": [
          "Riders"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "surname",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "phone number",
            "required": false,
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "3 star, 2 star, 1 star",
            "required": false,
            "name": "ratings",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Es: bike, scooter, car, etc...",
            "required": false,
            "name": "trasportType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|surname|name|email|phone|ratings|position|trasportType|image),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|surname|name|email|phone|ratings|position|trasportType|image)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e466"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "surname": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "number",
                      "description": "phone number"
                    },
                    "ratings": {
                      "type": "string",
                      "description": "3 star, 2 star, 1 star"
                    },
                    "position": {
                      "type": "array",
                      "items": {
                        "type": "number"
                      }
                    },
                    "trasportType": {
                      "type": "string",
                      "description": "Es: bike, scooter, car, etc..."
                    },
                    "image": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an item from the riders collection",
        "tags": [
          "Riders"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "surname",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "phone number",
            "required": false,
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "3 star, 2 star, 1 star",
            "required": false,
            "name": "ratings",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Es: bike, scooter, car, etc...",
            "required": false,
            "name": "trasportType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update an item of the riders collection by ID",
        "tags": [
          "Riders"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "surname",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "phone number",
            "required": false,
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "3 star, 2 star, 1 star",
            "required": false,
            "name": "ratings",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Es: bike, scooter, car, etc...",
            "required": false,
            "name": "trasportType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body2"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e466"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "surname": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "number",
                      "description": "phone number"
                    },
                    "ratings": {
                      "type": "string",
                      "description": "3 star, 2 star, 1 star"
                    },
                    "position": {
                      "type": "array",
                      "items": {
                        "type": "number"
                      }
                    },
                    "trasportType": {
                      "type": "string",
                      "description": "Es: bike, scooter, car, etc..."
                    },
                    "image": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/riders/count": {
      "get": {
        "summary": "Count the number of riders",
        "tags": [
          "Riders"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e469",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "surname",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "phone number",
            "required": false,
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "3 star, 2 star, 1 star",
            "required": false,
            "name": "ratings",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Es: bike, scooter, car, etc...",
            "required": false,
            "name": "trasportType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          }
        }
      }
    },
    "/v2/riders/bulk": {
      "post": {
        "summary": "Insert new riders",
        "tags": [
          "Riders"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "surname": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "number",
                      "description": "phone number"
                    },
                    "ratings": {
                      "type": "string",
                      "description": "3 star, 2 star, 1 star"
                    },
                    "position": {
                      "type": "array",
                      "items": {
                        "type": "number"
                      },
                      "minItems": 2,
                      "maxItems": 3
                    },
                    "trasportType": {
                      "type": "string",
                      "description": "Es: bike, scooter, car, etc..."
                    },
                    "image": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "__STATE__": {
                      "type": "string",
                      "enum": [
                        "PUBLIC",
                        "DRAFT",
                        "TRASH",
                        "DELETED"
                      ],
                      "description": "The state of the document",
                      "default": "DRAFT"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "Hexadecimal identifier of the document in the collection",
                        "example": "60a24a2b28a75f0013d7e4c3"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update multiple items of riders, each one with its own modifications",
        "tags": [
          "Riders"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "pattern": "^[a-fA-F\\d]{24}$",
                          "description": "Hexadecimal identifier of the document in the collection",
                          "example": "60a24a2b28a75f0013d7e4c4"
                        },
                        "_st": {
                          "type": "string",
                          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
                          "default": "PUBLIC",
                          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list"
                        },
                        "creatorId": {
                          "type": "string",
                          "description": "creatorId"
                        },
                        "createdAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "createdAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "updaterId": {
                          "type": "string",
                          "description": "updaterId"
                        },
                        "updatedAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "updatedAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "surname": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "phone": {
                          "type": "number",
                          "description": "phone number"
                        },
                        "ratings": {
                          "type": "string",
                          "description": "3 star, 2 star, 1 star"
                        },
                        "trasportType": {
                          "type": "string",
                          "description": "Es: bike, scooter, car, etc..."
                        },
                        "_q": {
                          "type": "string",
                          "description": "Additional query part to forward to MongoDB"
                        }
                      },
                      "additionalProperties": false
                    },
                    "update": {
                      "type": "object",
                      "properties": {
                        "$set": {
                          "type": "object",
                          "properties": {
                            "surname": {
                              "type": "string"
                            },
                            "name": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "phone": {
                              "type": "number",
                              "description": "phone number"
                            },
                            "ratings": {
                              "type": "string",
                              "description": "3 star, 2 star, 1 star"
                            },
                            "position": {
                              "type": "array",
                              "items": {
                                "type": "number"
                              },
                              "minItems": 2,
                              "maxItems": 3
                            },
                            "trasportType": {
                              "type": "string",
                              "description": "Es: bike, scooter, car, etc..."
                            },
                            "image": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "additionalProperties": true
                              }
                            },
                            "image.$.replace": {
                              "type": "object",
                              "additionalProperties": true
                            },
                            "image.$.merge": {
                              "type": "object",
                              "additionalProperties": true
                            }
                          },
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$unset": {
                          "type": "object",
                          "properties": {
                            "surname": {
                              "type": "boolean",
                              "enum": [
                                true
                              ]
                            },
                            "name": {
                              "type": "boolean",
                              "enum": [
                                true
                              ]
                            },
                            "email": {
                              "type": "boolean",
                              "enum": [
                                true
                              ]
                            },
                            "phone": {
                              "type": "boolean",
                              "enum": [
                                true
                              ]
                            },
                            "ratings": {
                              "type": "boolean",
                              "enum": [
                                true
                              ]
                            },
                            "position": {
                              "type": "boolean",
                              "enum": [
                                true
                              ]
                            },
                            "trasportType": {
                              "type": "boolean",
                              "enum": [
                                true
                              ]
                            },
                            "image": {
                              "type": "boolean",
                              "enum": [
                                true
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$inc": {
                          "type": "object",
                          "properties": {
                            "phone": {
                              "type": "number"
                            }
                          },
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$mul": {
                          "type": "object",
                          "properties": {
                            "phone": {
                              "type": "number"
                            }
                          },
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$currentDate": {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": false
                        },
                        "$push": {
                          "type": "object",
                          "properties": {
                            "image": {
                              "type": "object",
                              "additionalProperties": true
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "filter",
                    "update"
                  ]
                },
                "minItems": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          }
        }
      }
    },
    "/v2/riders/upsert-one": {
      "post": {
        "summary": "Update an item of riders if it is present, otherwise insert it",
        "tags": [
          "Riders"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "surname",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "phone number",
            "required": false,
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "3 star, 2 star, 1 star",
            "required": false,
            "name": "ratings",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Es: bike, scooter, car, etc...",
            "required": false,
            "name": "trasportType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "$set": {
                    "type": "object",
                    "properties": {
                      "surname": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "number",
                        "description": "phone number"
                      },
                      "ratings": {
                        "type": "string",
                        "description": "3 star, 2 star, 1 star"
                      },
                      "position": {
                        "type": "array",
                        "items": {
                          "type": "number"
                        },
                        "minItems": 2,
                        "maxItems": 3
                      },
                      "trasportType": {
                        "type": "string",
                        "description": "Es: bike, scooter, car, etc..."
                      },
                      "image": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": true
                        }
                      },
                      "image.$.replace": {
                        "type": "object",
                        "additionalProperties": true
                      },
                      "image.$.merge": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$unset": {
                    "type": "object",
                    "properties": {
                      "surname": {
                        "type": "boolean",
                        "enum": [
                          true
                        ]
                      },
                      "name": {
                        "type": "boolean",
                        "enum": [
                          true
                        ]
                      },
                      "email": {
                        "type": "boolean",
                        "enum": [
                          true
                        ]
                      },
                      "phone": {
                        "type": "boolean",
                        "enum": [
                          true
                        ]
                      },
                      "ratings": {
                        "type": "boolean",
                        "enum": [
                          true
                        ]
                      },
                      "position": {
                        "type": "boolean",
                        "enum": [
                          true
                        ]
                      },
                      "trasportType": {
                        "type": "boolean",
                        "enum": [
                          true
                        ]
                      },
                      "image": {
                        "type": "boolean",
                        "enum": [
                          true
                        ]
                      }
                    },
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$inc": {
                    "type": "object",
                    "properties": {
                      "phone": {
                        "type": "number"
                      }
                    },
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$mul": {
                    "type": "object",
                    "properties": {
                      "phone": {
                        "type": "number"
                      }
                    },
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$currentDate": {
                    "type": "object",
                    "properties": {},
                    "additionalProperties": false
                  },
                  "$push": {
                    "type": "object",
                    "properties": {
                      "image": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "additionalProperties": false
                  },
                  "$setOnInsert": {
                    "type": "object",
                    "properties": {
                      "surname": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "number",
                        "description": "phone number"
                      },
                      "ratings": {
                        "type": "string",
                        "description": "3 star, 2 star, 1 star"
                      },
                      "position": {
                        "type": "array",
                        "items": {
                          "type": "number"
                        },
                        "minItems": 2,
                        "maxItems": 3
                      },
                      "trasportType": {
                        "type": "string",
                        "description": "Es: bike, scooter, car, etc..."
                      },
                      "image": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": true
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e466"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "surname": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "number",
                      "description": "phone number"
                    },
                    "ratings": {
                      "type": "string",
                      "description": "3 star, 2 star, 1 star"
                    },
                    "position": {
                      "type": "array",
                      "items": {
                        "type": "number"
                      }
                    },
                    "trasportType": {
                      "type": "string",
                      "description": "Es: bike, scooter, car, etc..."
                    },
                    "image": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/riders/{id}/state": {
      "post": {
        "summary": "Change state of an item of riders",
        "tags": [
          "Riders"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "surname",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "phone number",
            "required": false,
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "3 star, 2 star, 1 star",
            "required": false,
            "name": "ratings",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Es: bike, scooter, car, etc...",
            "required": false,
            "name": "trasportType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body8"
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/riders/state": {
      "post": {
        "summary": "Change state of items of riders",
        "tags": [
          "Riders"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "required": [
                        "_id"
                      ],
                      "properties": {
                        "_id": {
                          "type": "string",
                          "pattern": "^[a-fA-F\\d]{24}$",
                          "description": "Hexadecimal identifier of the document in the collection",
                          "example": "60a24a2b28a75f0013d7e4c5"
                        },
                        "creatorId": {
                          "type": "string",
                          "description": "creatorId"
                        },
                        "createdAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "createdAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "updaterId": {
                          "type": "string",
                          "description": "updaterId"
                        },
                        "updatedAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "updatedAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "surname": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "phone": {
                          "type": "number",
                          "description": "phone number"
                        },
                        "ratings": {
                          "type": "string",
                          "description": "3 star, 2 star, 1 star"
                        },
                        "trasportType": {
                          "type": "string",
                          "description": "Es: bike, scooter, car, etc..."
                        },
                        "image": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": true
                          }
                        }
                      }
                    },
                    "stateTo": {
                      "type": "string",
                      "enum": [
                        "PUBLIC",
                        "DRAFT",
                        "TRASH",
                        "DELETED"
                      ]
                    }
                  },
                  "required": [
                    "filter",
                    "stateTo"
                  ],
                  "additionalProperties": false
                },
                "minItems": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Number of updated riders",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "Number of updated riders"
                }
              }
            }
          }
        }
      }
    },
    "/v2/dishes/": {
      "get": {
        "summary": "Get a list of dishes",
        "description": "The list can be filtered specifying the following parameters",
        "tags": [
          "Dishes"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e40f",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "description",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "price",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "calories",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|description|ingredients|price|calories|image),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|description|ingredients|price|calories|image)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "Limits the number of documents, max 200 elements, minimum 1",
            "required": false,
            "name": "_l",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 25
            }
          },
          {
            "description": "Skip the specified number of documents",
            "required": false,
            "name": "_sk",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
            "required": false,
            "name": "_s",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|description|price|calories)$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "_id",
                        "example": "60a24a2a28a75f0013d7e40e"
                      },
                      "creatorId": {
                        "type": "string",
                        "description": "creatorId"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-16T12:00:00.000Z",
                        "description": "createdAt"
                      },
                      "updaterId": {
                        "type": "string",
                        "description": "updaterId"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-16T12:00:00.000Z",
                        "description": "updatedAt"
                      },
                      "__STATE__": {
                        "type": "string",
                        "description": "__STATE__"
                      },
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "ingredients": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "price": {
                        "type": "number"
                      },
                      "calories": {
                        "type": "number"
                      },
                      "image": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new item to the dishes collection",
        "tags": [
          "Dishes"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "ingredients",
                  "price"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "ingredients": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "price": {
                    "type": "number"
                  },
                  "calories": {
                    "type": "number"
                  },
                  "image": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "__STATE__": {
                    "type": "string",
                    "enum": [
                      "PUBLIC",
                      "DRAFT",
                      "TRASH",
                      "DELETED"
                    ],
                    "description": "The state of the document",
                    "default": "DRAFT"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e492"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete items from the dishes collection",
        "tags": [
          "Dishes"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "description",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "price",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "calories",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update the items of the dishes collection that match the query",
        "tags": [
          "Dishes"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e411",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "description",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "price",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "calories",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body5"
        },
        "responses": {
          "200": {
            "description": "the number of documents that were modified",
            "content": {
              "*/*": {
                "schema": {
                  "type": "number",
                  "description": "the number of documents that were modified"
                }
              }
            }
          }
        }
      }
    },
    "/v2/dishes/export": {
      "get": {
        "summary": "Export the dishes collection",
        "description": "The exported documents are sent as newline separated JSON objects to facilitate large dataset streaming and parsing",
        "tags": [
          "Dishes"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e410",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "description",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "price",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "calories",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|description|ingredients|price|calories|image),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|description|ingredients|price|calories|image)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "Limits the number of documents",
            "required": false,
            "name": "_l",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "description": "Skip the specified number of documents",
            "required": false,
            "name": "_sk",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
            "required": false,
            "name": "_s",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|description|price|calories)$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/dishes/{id}": {
      "get": {
        "summary": "Find one item from the dishes collection by ID",
        "tags": [
          "Dishes"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "description",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "price",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "calories",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|description|ingredients|price|calories|image),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|description|ingredients|price|calories|image)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e40e"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "ingredients": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "price": {
                      "type": "number"
                    },
                    "calories": {
                      "type": "number"
                    },
                    "image": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an item from the dishes collection",
        "tags": [
          "Dishes"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "description",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "price",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "calories",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update an item of the dishes collection by ID",
        "tags": [
          "Dishes"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "description",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "price",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "calories",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body5"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e40e"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "ingredients": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "price": {
                      "type": "number"
                    },
                    "calories": {
                      "type": "number"
                    },
                    "image": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/dishes/count": {
      "get": {
        "summary": "Count the number of dishes",
        "tags": [
          "Dishes"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e411",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "description",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "price",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "calories",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          }
        }
      }
    },
    "/v2/dishes/bulk": {
      "post": {
        "summary": "Insert new dishes",
        "tags": [
          "Dishes"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "name",
                    "ingredients",
                    "price"
                  ],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "ingredients": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "price": {
                      "type": "number"
                    },
                    "calories": {
                      "type": "number"
                    },
                    "image": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "__STATE__": {
                      "type": "string",
                      "enum": [
                        "PUBLIC",
                        "DRAFT",
                        "TRASH",
                        "DELETED"
                      ],
                      "description": "The state of the document",
                      "default": "DRAFT"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "Hexadecimal identifier of the document in the collection",
                        "example": "60a24a2a28a75f0013d7e493"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update multiple items of dishes, each one with its own modifications",
        "tags": [
          "Dishes"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "pattern": "^[a-fA-F\\d]{24}$",
                          "description": "Hexadecimal identifier of the document in the collection",
                          "example": "60a24a2a28a75f0013d7e494"
                        },
                        "_st": {
                          "type": "string",
                          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
                          "default": "PUBLIC",
                          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list"
                        },
                        "creatorId": {
                          "type": "string",
                          "description": "creatorId"
                        },
                        "createdAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "createdAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "updaterId": {
                          "type": "string",
                          "description": "updaterId"
                        },
                        "updatedAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "updatedAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "price": {
                          "type": "number"
                        },
                        "calories": {
                          "type": "number"
                        },
                        "_q": {
                          "type": "string",
                          "description": "Additional query part to forward to MongoDB"
                        }
                      },
                      "additionalProperties": false
                    },
                    "update": {
                      "type": "object",
                      "properties": {
                        "$set": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "ingredients": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "price": {
                              "type": "number"
                            },
                            "calories": {
                              "type": "number"
                            },
                            "image": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "additionalProperties": true
                              }
                            },
                            "ingredients.$.replace": {
                              "type": "string"
                            },
                            "image.$.replace": {
                              "type": "object",
                              "additionalProperties": true
                            },
                            "image.$.merge": {
                              "type": "object",
                              "additionalProperties": true
                            }
                          },
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$unset": {
                          "type": "object",
                          "properties": {
                            "description": {
                              "type": "boolean",
                              "enum": [
                                true
                              ]
                            },
                            "calories": {
                              "type": "boolean",
                              "enum": [
                                true
                              ]
                            },
                            "image": {
                              "type": "boolean",
                              "enum": [
                                true
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$inc": {
                          "type": "object",
                          "properties": {
                            "price": {
                              "type": "number"
                            },
                            "calories": {
                              "type": "number"
                            }
                          },
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$mul": {
                          "type": "object",
                          "properties": {
                            "price": {
                              "type": "number"
                            },
                            "calories": {
                              "type": "number"
                            }
                          },
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$currentDate": {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": false
                        },
                        "$push": {
                          "type": "object",
                          "properties": {
                            "ingredients": {
                              "type": "string"
                            },
                            "image": {
                              "type": "object",
                              "additionalProperties": true
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "filter",
                    "update"
                  ]
                },
                "minItems": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          }
        }
      }
    },
    "/v2/dishes/upsert-one": {
      "post": {
        "summary": "Update an item of dishes if it is present, otherwise insert it",
        "tags": [
          "Dishes"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "description",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "price",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "calories",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "$set": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "ingredients": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "price": {
                        "type": "number"
                      },
                      "calories": {
                        "type": "number"
                      },
                      "image": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": true
                        }
                      },
                      "ingredients.$.replace": {
                        "type": "string"
                      },
                      "image.$.replace": {
                        "type": "object",
                        "additionalProperties": true
                      },
                      "image.$.merge": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$unset": {
                    "type": "object",
                    "properties": {
                      "description": {
                        "type": "boolean",
                        "enum": [
                          true
                        ]
                      },
                      "calories": {
                        "type": "boolean",
                        "enum": [
                          true
                        ]
                      },
                      "image": {
                        "type": "boolean",
                        "enum": [
                          true
                        ]
                      }
                    },
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$inc": {
                    "type": "object",
                    "properties": {
                      "price": {
                        "type": "number"
                      },
                      "calories": {
                        "type": "number"
                      }
                    },
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$mul": {
                    "type": "object",
                    "properties": {
                      "price": {
                        "type": "number"
                      },
                      "calories": {
                        "type": "number"
                      }
                    },
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$currentDate": {
                    "type": "object",
                    "properties": {},
                    "additionalProperties": false
                  },
                  "$push": {
                    "type": "object",
                    "properties": {
                      "ingredients": {
                        "type": "string"
                      },
                      "image": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "additionalProperties": false
                  },
                  "$setOnInsert": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "ingredients": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "price": {
                        "type": "number"
                      },
                      "calories": {
                        "type": "number"
                      },
                      "image": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": true
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e40e"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "ingredients": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "price": {
                      "type": "number"
                    },
                    "calories": {
                      "type": "number"
                    },
                    "image": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/dishes/{id}/state": {
      "post": {
        "summary": "Change state of an item of dishes",
        "tags": [
          "Dishes"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "description",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "price",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "calories",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body8"
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/dishes/state": {
      "post": {
        "summary": "Change state of items of dishes",
        "tags": [
          "Dishes"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "required": [
                        "_id"
                      ],
                      "properties": {
                        "_id": {
                          "type": "string",
                          "pattern": "^[a-fA-F\\d]{24}$",
                          "description": "Hexadecimal identifier of the document in the collection",
                          "example": "60a24a2a28a75f0013d7e495"
                        },
                        "creatorId": {
                          "type": "string",
                          "description": "creatorId"
                        },
                        "createdAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "createdAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "updaterId": {
                          "type": "string",
                          "description": "updaterId"
                        },
                        "updatedAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "updatedAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "price": {
                          "type": "number"
                        },
                        "calories": {
                          "type": "number"
                        },
                        "image": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": true
                          }
                        }
                      }
                    },
                    "stateTo": {
                      "type": "string",
                      "enum": [
                        "PUBLIC",
                        "DRAFT",
                        "TRASH",
                        "DELETED"
                      ]
                    }
                  },
                  "required": [
                    "filter",
                    "stateTo"
                  ],
                  "additionalProperties": false
                },
                "minItems": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Number of updated dishes",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "Number of updated dishes"
                }
              }
            }
          }
        }
      }
    },
    "/v2/orders/": {
      "get": {
        "summary": "Get a list of orders",
        "description": "The list can be filtered specifying the following parameters",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e433",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e431",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e432",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|dishes|riderId|totalPrice|address|isLate|status|orderedAt|customerId|statusHistory|provinceId),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|dishes|riderId|totalPrice|address|isLate|status|orderedAt|customerId|statusHistory|provinceId)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "Limits the number of documents, max 200 elements, minimum 1",
            "required": false,
            "name": "_l",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 25
            }
          },
          {
            "description": "Skip the specified number of documents",
            "required": false,
            "name": "_sk",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
            "required": false,
            "name": "_s",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|riderId|totalPrice|address|isLate|status|orderedAt|customerId|provinceId)$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "_id",
                        "example": "60a24a2a28a75f0013d7e42e"
                      },
                      "creatorId": {
                        "type": "string",
                        "description": "creatorId"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-16T12:00:00.000Z",
                        "description": "createdAt"
                      },
                      "updaterId": {
                        "type": "string",
                        "description": "updaterId"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-16T12:00:00.000Z",
                        "description": "updatedAt"
                      },
                      "__STATE__": {
                        "type": "string",
                        "description": "__STATE__"
                      },
                      "dishes": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "riderId": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "Hexadecimal identifier of the document in the collection",
                        "example": "60a24a2a28a75f0013d7e42f"
                      },
                      "totalPrice": {
                        "type": "number"
                      },
                      "address": {
                        "type": "string"
                      },
                      "isLate": {
                        "type": "boolean"
                      },
                      "status": {
                        "type": "string",
                        "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING"
                      },
                      "orderedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-16T12:00:00.000Z"
                      },
                      "customerId": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "Hexadecimal identifier of the document in the collection",
                        "example": "60a24a2a28a75f0013d7e430"
                      },
                      "statusHistory": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": true
                        }
                      },
                      "provinceId": {
                        "type": "string",
                        "description": "_id of the province of the order"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new item to the orders collection",
        "tags": [
          "Orders"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body9"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2b28a75f0013d7e4b2"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete items from the orders collection",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e439",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e43a",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update the items of the orders collection that match the query",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e445",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e439",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e43a",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body10"
        },
        "responses": {
          "200": {
            "description": "the number of documents that were modified",
            "content": {
              "*/*": {
                "schema": {
                  "type": "number",
                  "description": "the number of documents that were modified"
                }
              }
            }
          }
        }
      }
    },
    "/v2/orders-pending/": {
      "get": {
        "summary": "Get a list of orders",
        "description": "The list can be filtered specifying the following parameters",
        "tags": [
          "Orders Pending"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e433",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e431",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e432",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|dishes|riderId|totalPrice|address|isLate|status|orderedAt|customerId|statusHistory|provinceId),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|dishes|riderId|totalPrice|address|isLate|status|orderedAt|customerId|statusHistory|provinceId)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "Limits the number of documents, max 200 elements, minimum 1",
            "required": false,
            "name": "_l",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 25
            }
          },
          {
            "description": "Skip the specified number of documents",
            "required": false,
            "name": "_sk",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
            "required": false,
            "name": "_s",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|riderId|totalPrice|address|isLate|status|orderedAt|customerId|provinceId)$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "_id",
                        "example": "60a24a2a28a75f0013d7e42e"
                      },
                      "creatorId": {
                        "type": "string",
                        "description": "creatorId"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-16T12:00:00.000Z",
                        "description": "createdAt"
                      },
                      "updaterId": {
                        "type": "string",
                        "description": "updaterId"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-16T12:00:00.000Z",
                        "description": "updatedAt"
                      },
                      "__STATE__": {
                        "type": "string",
                        "description": "__STATE__"
                      },
                      "dishes": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "riderId": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "Hexadecimal identifier of the document in the collection",
                        "example": "60a24a2a28a75f0013d7e42f"
                      },
                      "totalPrice": {
                        "type": "number"
                      },
                      "address": {
                        "type": "string"
                      },
                      "isLate": {
                        "type": "boolean"
                      },
                      "status": {
                        "type": "string",
                        "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING"
                      },
                      "orderedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-16T12:00:00.000Z"
                      },
                      "customerId": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "Hexadecimal identifier of the document in the collection",
                        "example": "60a24a2a28a75f0013d7e430"
                      },
                      "statusHistory": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": true
                        }
                      },
                      "provinceId": {
                        "type": "string",
                        "description": "_id of the province of the order"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new item to the orders collection",
        "tags": [
          "Orders Pending"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body9"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2b28a75f0013d7e4b2"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete items from the orders collection",
        "tags": [
          "Orders Pending"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e439",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e43a",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update the items of the orders collection that match the query",
        "tags": [
          "Orders Pending"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e445",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e439",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e43a",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body10"
        },
        "responses": {
          "200": {
            "description": "the number of documents that were modified",
            "content": {
              "*/*": {
                "schema": {
                  "type": "number",
                  "description": "the number of documents that were modified"
                }
              }
            }
          }
        }
      }
    },
    "/v2/orders-preparing/": {
      "get": {
        "summary": "Get a list of orders",
        "description": "The list can be filtered specifying the following parameters",
        "tags": [
          "Orders Preparing"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e433",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e431",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e432",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|dishes|riderId|totalPrice|address|isLate|status|orderedAt|customerId|statusHistory|provinceId),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|dishes|riderId|totalPrice|address|isLate|status|orderedAt|customerId|statusHistory|provinceId)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "Limits the number of documents, max 200 elements, minimum 1",
            "required": false,
            "name": "_l",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 25
            }
          },
          {
            "description": "Skip the specified number of documents",
            "required": false,
            "name": "_sk",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
            "required": false,
            "name": "_s",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|riderId|totalPrice|address|isLate|status|orderedAt|customerId|provinceId)$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "_id",
                        "example": "60a24a2a28a75f0013d7e42e"
                      },
                      "creatorId": {
                        "type": "string",
                        "description": "creatorId"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-16T12:00:00.000Z",
                        "description": "createdAt"
                      },
                      "updaterId": {
                        "type": "string",
                        "description": "updaterId"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-16T12:00:00.000Z",
                        "description": "updatedAt"
                      },
                      "__STATE__": {
                        "type": "string",
                        "description": "__STATE__"
                      },
                      "dishes": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "riderId": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "Hexadecimal identifier of the document in the collection",
                        "example": "60a24a2a28a75f0013d7e42f"
                      },
                      "totalPrice": {
                        "type": "number"
                      },
                      "address": {
                        "type": "string"
                      },
                      "isLate": {
                        "type": "boolean"
                      },
                      "status": {
                        "type": "string",
                        "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING"
                      },
                      "orderedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-16T12:00:00.000Z"
                      },
                      "customerId": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "Hexadecimal identifier of the document in the collection",
                        "example": "60a24a2a28a75f0013d7e430"
                      },
                      "statusHistory": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": true
                        }
                      },
                      "provinceId": {
                        "type": "string",
                        "description": "_id of the province of the order"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new item to the orders collection",
        "tags": [
          "Orders Preparing"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body9"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2b28a75f0013d7e4b2"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete items from the orders collection",
        "tags": [
          "Orders Preparing"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e439",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e43a",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update the items of the orders collection that match the query",
        "tags": [
          "Orders Preparing"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e445",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e439",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e43a",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body10"
        },
        "responses": {
          "200": {
            "description": "the number of documents that were modified",
            "content": {
              "*/*": {
                "schema": {
                  "type": "number",
                  "description": "the number of documents that were modified"
                }
              }
            }
          }
        }
      }
    },
    "/v2/orders-delivered/": {
      "get": {
        "summary": "Get a list of orders",
        "description": "The list can be filtered specifying the following parameters",
        "tags": [
          "Orders Delivered"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e433",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e431",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e432",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|dishes|riderId|totalPrice|address|isLate|status|orderedAt|customerId|statusHistory|provinceId),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|dishes|riderId|totalPrice|address|isLate|status|orderedAt|customerId|statusHistory|provinceId)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "Limits the number of documents, max 200 elements, minimum 1",
            "required": false,
            "name": "_l",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 25
            }
          },
          {
            "description": "Skip the specified number of documents",
            "required": false,
            "name": "_sk",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
            "required": false,
            "name": "_s",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|riderId|totalPrice|address|isLate|status|orderedAt|customerId|provinceId)$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "_id",
                        "example": "60a24a2a28a75f0013d7e42e"
                      },
                      "creatorId": {
                        "type": "string",
                        "description": "creatorId"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-16T12:00:00.000Z",
                        "description": "createdAt"
                      },
                      "updaterId": {
                        "type": "string",
                        "description": "updaterId"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-16T12:00:00.000Z",
                        "description": "updatedAt"
                      },
                      "__STATE__": {
                        "type": "string",
                        "description": "__STATE__"
                      },
                      "dishes": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "riderId": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "Hexadecimal identifier of the document in the collection",
                        "example": "60a24a2a28a75f0013d7e42f"
                      },
                      "totalPrice": {
                        "type": "number"
                      },
                      "address": {
                        "type": "string"
                      },
                      "isLate": {
                        "type": "boolean"
                      },
                      "status": {
                        "type": "string",
                        "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING"
                      },
                      "orderedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-16T12:00:00.000Z"
                      },
                      "customerId": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "Hexadecimal identifier of the document in the collection",
                        "example": "60a24a2a28a75f0013d7e430"
                      },
                      "statusHistory": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": true
                        }
                      },
                      "provinceId": {
                        "type": "string",
                        "description": "_id of the province of the order"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new item to the orders collection",
        "tags": [
          "Orders Delivered"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body9"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2b28a75f0013d7e4b2"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete items from the orders collection",
        "tags": [
          "Orders Delivered"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e439",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e43a",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update the items of the orders collection that match the query",
        "tags": [
          "Orders Delivered"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e445",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e439",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e43a",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body10"
        },
        "responses": {
          "200": {
            "description": "the number of documents that were modified",
            "content": {
              "*/*": {
                "schema": {
                  "type": "number",
                  "description": "the number of documents that were modified"
                }
              }
            }
          }
        }
      }
    },
    "/v2/orders-aborted/": {
      "get": {
        "summary": "Get a list of orders",
        "description": "The list can be filtered specifying the following parameters",
        "tags": [
          "Orders Aborted"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e433",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e431",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e432",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|dishes|riderId|totalPrice|address|isLate|status|orderedAt|customerId|statusHistory|provinceId),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|dishes|riderId|totalPrice|address|isLate|status|orderedAt|customerId|statusHistory|provinceId)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "Limits the number of documents, max 200 elements, minimum 1",
            "required": false,
            "name": "_l",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 25
            }
          },
          {
            "description": "Skip the specified number of documents",
            "required": false,
            "name": "_sk",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
            "required": false,
            "name": "_s",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|riderId|totalPrice|address|isLate|status|orderedAt|customerId|provinceId)$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "_id",
                        "example": "60a24a2a28a75f0013d7e42e"
                      },
                      "creatorId": {
                        "type": "string",
                        "description": "creatorId"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-16T12:00:00.000Z",
                        "description": "createdAt"
                      },
                      "updaterId": {
                        "type": "string",
                        "description": "updaterId"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-16T12:00:00.000Z",
                        "description": "updatedAt"
                      },
                      "__STATE__": {
                        "type": "string",
                        "description": "__STATE__"
                      },
                      "dishes": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "riderId": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "Hexadecimal identifier of the document in the collection",
                        "example": "60a24a2a28a75f0013d7e42f"
                      },
                      "totalPrice": {
                        "type": "number"
                      },
                      "address": {
                        "type": "string"
                      },
                      "isLate": {
                        "type": "boolean"
                      },
                      "status": {
                        "type": "string",
                        "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING"
                      },
                      "orderedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-16T12:00:00.000Z"
                      },
                      "customerId": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "Hexadecimal identifier of the document in the collection",
                        "example": "60a24a2a28a75f0013d7e430"
                      },
                      "statusHistory": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": true
                        }
                      },
                      "provinceId": {
                        "type": "string",
                        "description": "_id of the province of the order"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new item to the orders collection",
        "tags": [
          "Orders Aborted"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body9"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2b28a75f0013d7e4b2"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete items from the orders collection",
        "tags": [
          "Orders Aborted"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e439",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e43a",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update the items of the orders collection that match the query",
        "tags": [
          "Orders Aborted"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e445",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e439",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e43a",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body10"
        },
        "responses": {
          "200": {
            "description": "the number of documents that were modified",
            "content": {
              "*/*": {
                "schema": {
                  "type": "number",
                  "description": "the number of documents that were modified"
                }
              }
            }
          }
        }
      }
    },
    "/v2/orders/export": {
      "get": {
        "summary": "Export the orders collection",
        "description": "The exported documents are sent as newline separated JSON objects to facilitate large dataset streaming and parsing",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e434",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e435",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e436",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|dishes|riderId|totalPrice|address|isLate|status|orderedAt|customerId|statusHistory|provinceId),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|dishes|riderId|totalPrice|address|isLate|status|orderedAt|customerId|statusHistory|provinceId)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "Limits the number of documents",
            "required": false,
            "name": "_l",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "description": "Skip the specified number of documents",
            "required": false,
            "name": "_sk",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
            "required": false,
            "name": "_s",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|riderId|totalPrice|address|isLate|status|orderedAt|customerId|provinceId)$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/orders-pending/export": {
      "get": {
        "summary": "Export the orders collection",
        "description": "The exported documents are sent as newline separated JSON objects to facilitate large dataset streaming and parsing",
        "tags": [
          "Orders Pending"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e434",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e435",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e436",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|dishes|riderId|totalPrice|address|isLate|status|orderedAt|customerId|statusHistory|provinceId),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|dishes|riderId|totalPrice|address|isLate|status|orderedAt|customerId|statusHistory|provinceId)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "Limits the number of documents",
            "required": false,
            "name": "_l",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "description": "Skip the specified number of documents",
            "required": false,
            "name": "_sk",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
            "required": false,
            "name": "_s",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|riderId|totalPrice|address|isLate|status|orderedAt|customerId|provinceId)$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/orders-preparing/export": {
      "get": {
        "summary": "Export the orders collection",
        "description": "The exported documents are sent as newline separated JSON objects to facilitate large dataset streaming and parsing",
        "tags": [
          "Orders Preparing"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e434",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e435",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e436",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|dishes|riderId|totalPrice|address|isLate|status|orderedAt|customerId|statusHistory|provinceId),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|dishes|riderId|totalPrice|address|isLate|status|orderedAt|customerId|statusHistory|provinceId)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "Limits the number of documents",
            "required": false,
            "name": "_l",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "description": "Skip the specified number of documents",
            "required": false,
            "name": "_sk",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
            "required": false,
            "name": "_s",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|riderId|totalPrice|address|isLate|status|orderedAt|customerId|provinceId)$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/orders-delivered/export": {
      "get": {
        "summary": "Export the orders collection",
        "description": "The exported documents are sent as newline separated JSON objects to facilitate large dataset streaming and parsing",
        "tags": [
          "Orders Delivered"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e434",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e435",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e436",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|dishes|riderId|totalPrice|address|isLate|status|orderedAt|customerId|statusHistory|provinceId),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|dishes|riderId|totalPrice|address|isLate|status|orderedAt|customerId|statusHistory|provinceId)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "Limits the number of documents",
            "required": false,
            "name": "_l",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "description": "Skip the specified number of documents",
            "required": false,
            "name": "_sk",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
            "required": false,
            "name": "_s",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|riderId|totalPrice|address|isLate|status|orderedAt|customerId|provinceId)$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/orders-aborted/export": {
      "get": {
        "summary": "Export the orders collection",
        "description": "The exported documents are sent as newline separated JSON objects to facilitate large dataset streaming and parsing",
        "tags": [
          "Orders Aborted"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e434",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e435",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e436",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|dishes|riderId|totalPrice|address|isLate|status|orderedAt|customerId|statusHistory|provinceId),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|dishes|riderId|totalPrice|address|isLate|status|orderedAt|customerId|statusHistory|provinceId)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "Limits the number of documents",
            "required": false,
            "name": "_l",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "description": "Skip the specified number of documents",
            "required": false,
            "name": "_sk",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
            "required": false,
            "name": "_s",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|riderId|totalPrice|address|isLate|status|orderedAt|customerId|provinceId)$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/orders/{id}": {
      "get": {
        "summary": "Find one item from the orders collection by ID",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e437",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e438",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|dishes|riderId|totalPrice|address|isLate|status|orderedAt|customerId|statusHistory|provinceId),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|dishes|riderId|totalPrice|address|isLate|status|orderedAt|customerId|statusHistory|provinceId)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e42e"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "dishes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "riderId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e42f"
                    },
                    "totalPrice": {
                      "type": "number"
                    },
                    "address": {
                      "type": "string"
                    },
                    "isLate": {
                      "type": "boolean"
                    },
                    "status": {
                      "type": "string",
                      "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING"
                    },
                    "orderedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z"
                    },
                    "customerId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e430"
                    },
                    "statusHistory": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "provinceId": {
                      "type": "string",
                      "description": "_id of the province of the order"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an item from the orders collection",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e439",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e43a",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update an item of the orders collection by ID",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e439",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e43a",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body10"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e42e"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "dishes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "riderId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e42f"
                    },
                    "totalPrice": {
                      "type": "number"
                    },
                    "address": {
                      "type": "string"
                    },
                    "isLate": {
                      "type": "boolean"
                    },
                    "status": {
                      "type": "string",
                      "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING"
                    },
                    "orderedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z"
                    },
                    "customerId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e430"
                    },
                    "statusHistory": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "provinceId": {
                      "type": "string",
                      "description": "_id of the province of the order"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/orders-pending/{id}": {
      "get": {
        "summary": "Find one item from the orders collection by ID",
        "tags": [
          "Orders Pending"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e437",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e438",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|dishes|riderId|totalPrice|address|isLate|status|orderedAt|customerId|statusHistory|provinceId),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|dishes|riderId|totalPrice|address|isLate|status|orderedAt|customerId|statusHistory|provinceId)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e42e"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "dishes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "riderId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e42f"
                    },
                    "totalPrice": {
                      "type": "number"
                    },
                    "address": {
                      "type": "string"
                    },
                    "isLate": {
                      "type": "boolean"
                    },
                    "status": {
                      "type": "string",
                      "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING"
                    },
                    "orderedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z"
                    },
                    "customerId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e430"
                    },
                    "statusHistory": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "provinceId": {
                      "type": "string",
                      "description": "_id of the province of the order"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an item from the orders collection",
        "tags": [
          "Orders Pending"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e439",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e43a",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update an item of the orders collection by ID",
        "tags": [
          "Orders Pending"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e439",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e43a",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body10"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e42e"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "dishes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "riderId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e42f"
                    },
                    "totalPrice": {
                      "type": "number"
                    },
                    "address": {
                      "type": "string"
                    },
                    "isLate": {
                      "type": "boolean"
                    },
                    "status": {
                      "type": "string",
                      "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING"
                    },
                    "orderedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z"
                    },
                    "customerId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e430"
                    },
                    "statusHistory": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "provinceId": {
                      "type": "string",
                      "description": "_id of the province of the order"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/orders-preparing/{id}": {
      "get": {
        "summary": "Find one item from the orders collection by ID",
        "tags": [
          "Orders Preparing"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e437",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e438",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|dishes|riderId|totalPrice|address|isLate|status|orderedAt|customerId|statusHistory|provinceId),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|dishes|riderId|totalPrice|address|isLate|status|orderedAt|customerId|statusHistory|provinceId)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e42e"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "dishes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "riderId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e42f"
                    },
                    "totalPrice": {
                      "type": "number"
                    },
                    "address": {
                      "type": "string"
                    },
                    "isLate": {
                      "type": "boolean"
                    },
                    "status": {
                      "type": "string",
                      "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING"
                    },
                    "orderedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z"
                    },
                    "customerId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e430"
                    },
                    "statusHistory": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "provinceId": {
                      "type": "string",
                      "description": "_id of the province of the order"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an item from the orders collection",
        "tags": [
          "Orders Preparing"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e439",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e43a",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update an item of the orders collection by ID",
        "tags": [
          "Orders Preparing"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e439",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e43a",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body10"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e42e"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "dishes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "riderId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e42f"
                    },
                    "totalPrice": {
                      "type": "number"
                    },
                    "address": {
                      "type": "string"
                    },
                    "isLate": {
                      "type": "boolean"
                    },
                    "status": {
                      "type": "string",
                      "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING"
                    },
                    "orderedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z"
                    },
                    "customerId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e430"
                    },
                    "statusHistory": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "provinceId": {
                      "type": "string",
                      "description": "_id of the province of the order"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/orders-delivered/{id}": {
      "get": {
        "summary": "Find one item from the orders collection by ID",
        "tags": [
          "Orders Delivered"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e437",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e438",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|dishes|riderId|totalPrice|address|isLate|status|orderedAt|customerId|statusHistory|provinceId),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|dishes|riderId|totalPrice|address|isLate|status|orderedAt|customerId|statusHistory|provinceId)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e42e"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "dishes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "riderId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e42f"
                    },
                    "totalPrice": {
                      "type": "number"
                    },
                    "address": {
                      "type": "string"
                    },
                    "isLate": {
                      "type": "boolean"
                    },
                    "status": {
                      "type": "string",
                      "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING"
                    },
                    "orderedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z"
                    },
                    "customerId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e430"
                    },
                    "statusHistory": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "provinceId": {
                      "type": "string",
                      "description": "_id of the province of the order"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an item from the orders collection",
        "tags": [
          "Orders Delivered"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e439",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e43a",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update an item of the orders collection by ID",
        "tags": [
          "Orders Delivered"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e439",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e43a",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body10"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e42e"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "dishes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "riderId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e42f"
                    },
                    "totalPrice": {
                      "type": "number"
                    },
                    "address": {
                      "type": "string"
                    },
                    "isLate": {
                      "type": "boolean"
                    },
                    "status": {
                      "type": "string",
                      "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING"
                    },
                    "orderedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z"
                    },
                    "customerId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e430"
                    },
                    "statusHistory": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "provinceId": {
                      "type": "string",
                      "description": "_id of the province of the order"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/orders-aborted/{id}": {
      "get": {
        "summary": "Find one item from the orders collection by ID",
        "tags": [
          "Orders Aborted"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e437",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e438",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|dishes|riderId|totalPrice|address|isLate|status|orderedAt|customerId|statusHistory|provinceId),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|dishes|riderId|totalPrice|address|isLate|status|orderedAt|customerId|statusHistory|provinceId)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e42e"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "dishes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "riderId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e42f"
                    },
                    "totalPrice": {
                      "type": "number"
                    },
                    "address": {
                      "type": "string"
                    },
                    "isLate": {
                      "type": "boolean"
                    },
                    "status": {
                      "type": "string",
                      "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING"
                    },
                    "orderedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z"
                    },
                    "customerId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e430"
                    },
                    "statusHistory": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "provinceId": {
                      "type": "string",
                      "description": "_id of the province of the order"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an item from the orders collection",
        "tags": [
          "Orders Aborted"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e439",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e43a",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update an item of the orders collection by ID",
        "tags": [
          "Orders Aborted"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e439",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e43a",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body10"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e42e"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "dishes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "riderId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e42f"
                    },
                    "totalPrice": {
                      "type": "number"
                    },
                    "address": {
                      "type": "string"
                    },
                    "isLate": {
                      "type": "boolean"
                    },
                    "status": {
                      "type": "string",
                      "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING"
                    },
                    "orderedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z"
                    },
                    "customerId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e430"
                    },
                    "statusHistory": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "provinceId": {
                      "type": "string",
                      "description": "_id of the province of the order"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/orders/count": {
      "get": {
        "summary": "Count the number of orders",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e445",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e439",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e43a",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          }
        }
      }
    },
    "/v2/orders-pending/count": {
      "get": {
        "summary": "Count the number of orders",
        "tags": [
          "Orders Pending"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e445",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e439",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e43a",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          }
        }
      }
    },
    "/v2/orders-preparing/count": {
      "get": {
        "summary": "Count the number of orders",
        "tags": [
          "Orders Preparing"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e445",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e439",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e43a",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          }
        }
      }
    },
    "/v2/orders-delivered/count": {
      "get": {
        "summary": "Count the number of orders",
        "tags": [
          "Orders Delivered"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e445",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e439",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e43a",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          }
        }
      }
    },
    "/v2/orders-aborted/count": {
      "get": {
        "summary": "Count the number of orders",
        "tags": [
          "Orders Aborted"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e445",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e439",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e43a",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          }
        }
      }
    },
    "/v2/orders/bulk": {
      "post": {
        "summary": "Insert new orders",
        "tags": [
          "Orders"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body11"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "Hexadecimal identifier of the document in the collection",
                        "example": "60a24a2b28a75f0013d7e4b3"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "APISecretHeader": []
          }
        ]
      },
      "patch": {
        "summary": "Update multiple items of orders, each one with its own modifications",
        "tags": [
          "Orders"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body6"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          }
        }
      }
    },
    "/v2/orders-pending/bulk": {
      "post": {
        "summary": "Insert new orders",
        "tags": [
          "Orders Pending"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body11"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "Hexadecimal identifier of the document in the collection",
                        "example": "60a24a2b28a75f0013d7e4b3"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update multiple items of orders, each one with its own modifications",
        "tags": [
          "Orders Pending"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body6"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          }
        }
      }
    },
    "/v2/orders-preparing/bulk": {
      "post": {
        "summary": "Insert new orders",
        "tags": [
          "Orders Preparing"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body11"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "Hexadecimal identifier of the document in the collection",
                        "example": "60a24a2b28a75f0013d7e4b3"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update multiple items of orders, each one with its own modifications",
        "tags": [
          "Orders Preparing"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body6"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          }
        }
      }
    },
    "/v2/orders-delivered/bulk": {
      "post": {
        "summary": "Insert new orders",
        "tags": [
          "Orders Delivered"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body11"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "Hexadecimal identifier of the document in the collection",
                        "example": "60a24a2b28a75f0013d7e4b3"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update multiple items of orders, each one with its own modifications",
        "tags": [
          "Orders Delivered"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body6"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          }
        }
      }
    },
    "/v2/orders-aborted/bulk": {
      "post": {
        "summary": "Insert new orders",
        "tags": [
          "Orders Aborted"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body11"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "Hexadecimal identifier of the document in the collection",
                        "example": "60a24a2b28a75f0013d7e4b3"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update multiple items of orders, each one with its own modifications",
        "tags": [
          "Orders Aborted"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body6"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          }
        }
      }
    },
    "/v2/orders/upsert-one": {
      "post": {
        "summary": "Update an item of orders if it is present, otherwise insert it",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e439",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e43a",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body12"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e42e"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "dishes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "riderId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e42f"
                    },
                    "totalPrice": {
                      "type": "number"
                    },
                    "address": {
                      "type": "string"
                    },
                    "isLate": {
                      "type": "boolean"
                    },
                    "status": {
                      "type": "string",
                      "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING"
                    },
                    "orderedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z"
                    },
                    "customerId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e430"
                    },
                    "statusHistory": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "provinceId": {
                      "type": "string",
                      "description": "_id of the province of the order"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/orders-pending/upsert-one": {
      "post": {
        "summary": "Update an item of orders if it is present, otherwise insert it",
        "tags": [
          "Orders Pending"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e439",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e43a",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body12"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e42e"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "dishes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "riderId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e42f"
                    },
                    "totalPrice": {
                      "type": "number"
                    },
                    "address": {
                      "type": "string"
                    },
                    "isLate": {
                      "type": "boolean"
                    },
                    "status": {
                      "type": "string",
                      "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING"
                    },
                    "orderedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z"
                    },
                    "customerId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e430"
                    },
                    "statusHistory": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "provinceId": {
                      "type": "string",
                      "description": "_id of the province of the order"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/orders-preparing/upsert-one": {
      "post": {
        "summary": "Update an item of orders if it is present, otherwise insert it",
        "tags": [
          "Orders Preparing"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e439",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e43a",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body12"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e42e"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "dishes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "riderId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e42f"
                    },
                    "totalPrice": {
                      "type": "number"
                    },
                    "address": {
                      "type": "string"
                    },
                    "isLate": {
                      "type": "boolean"
                    },
                    "status": {
                      "type": "string",
                      "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING"
                    },
                    "orderedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z"
                    },
                    "customerId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e430"
                    },
                    "statusHistory": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "provinceId": {
                      "type": "string",
                      "description": "_id of the province of the order"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/orders-delivered/upsert-one": {
      "post": {
        "summary": "Update an item of orders if it is present, otherwise insert it",
        "tags": [
          "Orders Delivered"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e439",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e43a",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body12"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e42e"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "dishes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "riderId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e42f"
                    },
                    "totalPrice": {
                      "type": "number"
                    },
                    "address": {
                      "type": "string"
                    },
                    "isLate": {
                      "type": "boolean"
                    },
                    "status": {
                      "type": "string",
                      "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING"
                    },
                    "orderedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z"
                    },
                    "customerId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e430"
                    },
                    "statusHistory": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "provinceId": {
                      "type": "string",
                      "description": "_id of the province of the order"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/orders-aborted/upsert-one": {
      "post": {
        "summary": "Update an item of orders if it is present, otherwise insert it",
        "tags": [
          "Orders Aborted"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e439",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e43a",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body12"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e42e"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "dishes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "riderId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e42f"
                    },
                    "totalPrice": {
                      "type": "number"
                    },
                    "address": {
                      "type": "string"
                    },
                    "isLate": {
                      "type": "boolean"
                    },
                    "status": {
                      "type": "string",
                      "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING"
                    },
                    "orderedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z"
                    },
                    "customerId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e430"
                    },
                    "statusHistory": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "provinceId": {
                      "type": "string",
                      "description": "_id of the province of the order"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/orders/{id}/state": {
      "post": {
        "summary": "Change state of an item of orders",
        "tags": [
          "Orders"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e439",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e43a",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body8"
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/orders-pending/{id}/state": {
      "post": {
        "summary": "Change state of an item of orders",
        "tags": [
          "Orders Pending"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e439",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e43a",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body8"
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/orders-preparing/{id}/state": {
      "post": {
        "summary": "Change state of an item of orders",
        "tags": [
          "Orders Preparing"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e439",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e43a",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body8"
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/orders-delivered/{id}/state": {
      "post": {
        "summary": "Change state of an item of orders",
        "tags": [
          "Orders Delivered"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e439",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e43a",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body8"
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/orders-aborted/{id}/state": {
      "post": {
        "summary": "Change state of an item of orders",
        "tags": [
          "Orders Aborted"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e439",
            "required": false,
            "name": "riderId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "required": false,
            "name": "totalPrice",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "isLate",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING",
            "required": false,
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "orderedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e43a",
            "required": false,
            "name": "customerId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "_id of the province of the order",
            "required": false,
            "name": "provinceId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body8"
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/orders/state": {
      "post": {
        "summary": "Change state of items of orders",
        "tags": [
          "Orders"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body13"
        },
        "responses": {
          "200": {
            "description": "Number of updated orders",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "Number of updated orders"
                }
              }
            }
          }
        }
      }
    },
    "/v2/orders-pending/state": {
      "post": {
        "summary": "Change state of items of orders",
        "tags": [
          "Orders Pending"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body13"
        },
        "responses": {
          "200": {
            "description": "Number of updated orders",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "Number of updated orders"
                }
              }
            }
          }
        }
      }
    },
    "/v2/orders-preparing/state": {
      "post": {
        "summary": "Change state of items of orders",
        "tags": [
          "Orders Preparing"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body13"
        },
        "responses": {
          "200": {
            "description": "Number of updated orders",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "Number of updated orders"
                }
              }
            }
          }
        }
      }
    },
    "/v2/orders-delivered/state": {
      "post": {
        "summary": "Change state of items of orders",
        "tags": [
          "Orders Delivered"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body13"
        },
        "responses": {
          "200": {
            "description": "Number of updated orders",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "Number of updated orders"
                }
              }
            }
          }
        }
      }
    },
    "/v2/orders-aborted/state": {
      "post": {
        "summary": "Change state of items of orders",
        "tags": [
          "Orders Aborted"
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body13"
        },
        "responses": {
          "200": {
            "description": "Number of updated orders",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "Number of updated orders"
                }
              }
            }
          }
        }
      }
    },
    "/v2/ingredients/": {
      "get": {
        "summary": "Get a list of ingredients",
        "description": "The list can be filtered specifying the following parameters",
        "tags": [
          "Ingredients"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e41f",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "description",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "allergene",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|description|image|allergene),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|description|image|allergene)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "Limits the number of documents, max 200 elements, minimum 1",
            "required": false,
            "name": "_l",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 25
            }
          },
          {
            "description": "Skip the specified number of documents",
            "required": false,
            "name": "_sk",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
            "required": false,
            "name": "_s",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|description|allergene)$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "_id",
                        "example": "60a24a2a28a75f0013d7e41e"
                      },
                      "creatorId": {
                        "type": "string",
                        "description": "creatorId"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-16T12:00:00.000Z",
                        "description": "createdAt"
                      },
                      "updaterId": {
                        "type": "string",
                        "description": "updaterId"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-16T12:00:00.000Z",
                        "description": "updatedAt"
                      },
                      "__STATE__": {
                        "type": "string",
                        "description": "__STATE__"
                      },
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "image": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": true
                        }
                      },
                      "allergene": {
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new item to the ingredients collection",
        "tags": [
          "Ingredients"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "image": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "allergene": {
                    "type": "boolean"
                  },
                  "__STATE__": {
                    "type": "string",
                    "enum": [
                      "PUBLIC",
                      "DRAFT",
                      "TRASH",
                      "DELETED"
                    ],
                    "description": "The state of the document",
                    "default": "DRAFT"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e4a2"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete items from the ingredients collection",
        "tags": [
          "Ingredients"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "description",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "allergene",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update the items of the ingredients collection that match the query",
        "tags": [
          "Ingredients"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e421",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "description",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "allergene",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body"
        },
        "responses": {
          "200": {
            "description": "the number of documents that were modified",
            "content": {
              "*/*": {
                "schema": {
                  "type": "number",
                  "description": "the number of documents that were modified"
                }
              }
            }
          }
        }
      }
    },
    "/v2/ingredients/export": {
      "get": {
        "summary": "Export the ingredients collection",
        "description": "The exported documents are sent as newline separated JSON objects to facilitate large dataset streaming and parsing",
        "tags": [
          "Ingredients"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e420",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "description",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "allergene",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|description|image|allergene),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|description|image|allergene)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "Limits the number of documents",
            "required": false,
            "name": "_l",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "description": "Skip the specified number of documents",
            "required": false,
            "name": "_sk",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
            "required": false,
            "name": "_s",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|description|allergene)$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/ingredients/{id}": {
      "get": {
        "summary": "Find one item from the ingredients collection by ID",
        "tags": [
          "Ingredients"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "description",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "allergene",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|description|image|allergene),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|description|image|allergene)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e41e"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "image": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "allergene": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an item from the ingredients collection",
        "tags": [
          "Ingredients"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "description",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "allergene",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update an item of the ingredients collection by ID",
        "tags": [
          "Ingredients"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "description",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "allergene",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e41e"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "image": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "allergene": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/ingredients/count": {
      "get": {
        "summary": "Count the number of ingredients",
        "tags": [
          "Ingredients"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e421",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "description",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "allergene",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          }
        }
      }
    },
    "/v2/ingredients/bulk": {
      "post": {
        "summary": "Insert new ingredients",
        "tags": [
          "Ingredients"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "image": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "allergene": {
                      "type": "boolean"
                    },
                    "__STATE__": {
                      "type": "string",
                      "enum": [
                        "PUBLIC",
                        "DRAFT",
                        "TRASH",
                        "DELETED"
                      ],
                      "description": "The state of the document",
                      "default": "DRAFT"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "Hexadecimal identifier of the document in the collection",
                        "example": "60a24a2a28a75f0013d7e4a3"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update multiple items of ingredients, each one with its own modifications",
        "tags": [
          "Ingredients"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "pattern": "^[a-fA-F\\d]{24}$",
                          "description": "Hexadecimal identifier of the document in the collection",
                          "example": "60a24a2a28a75f0013d7e4a4"
                        },
                        "_st": {
                          "type": "string",
                          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
                          "default": "PUBLIC",
                          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list"
                        },
                        "creatorId": {
                          "type": "string",
                          "description": "creatorId"
                        },
                        "createdAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "createdAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "updaterId": {
                          "type": "string",
                          "description": "updaterId"
                        },
                        "updatedAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "updatedAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "allergene": {
                          "type": "boolean"
                        },
                        "_q": {
                          "type": "string",
                          "description": "Additional query part to forward to MongoDB"
                        }
                      },
                      "additionalProperties": false
                    },
                    "update": {
                      "type": "object",
                      "properties": {
                        "$set": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            },
                            "image": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "additionalProperties": true
                              }
                            },
                            "allergene": {
                              "type": "boolean"
                            },
                            "image.$.replace": {
                              "type": "object",
                              "additionalProperties": true
                            },
                            "image.$.merge": {
                              "type": "object",
                              "additionalProperties": true
                            }
                          },
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$unset": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "boolean",
                              "enum": [
                                true
                              ]
                            },
                            "description": {
                              "type": "boolean",
                              "enum": [
                                true
                              ]
                            },
                            "image": {
                              "type": "boolean",
                              "enum": [
                                true
                              ]
                            },
                            "allergene": {
                              "type": "boolean",
                              "enum": [
                                true
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$inc": {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$mul": {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$currentDate": {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": false
                        },
                        "$push": {
                          "type": "object",
                          "properties": {
                            "image": {
                              "type": "object",
                              "additionalProperties": true
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "filter",
                    "update"
                  ]
                },
                "minItems": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          }
        }
      }
    },
    "/v2/ingredients/upsert-one": {
      "post": {
        "summary": "Update an item of ingredients if it is present, otherwise insert it",
        "tags": [
          "Ingredients"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "description",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "allergene",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "$set": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "image": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": true
                        }
                      },
                      "allergene": {
                        "type": "boolean"
                      },
                      "image.$.replace": {
                        "type": "object",
                        "additionalProperties": true
                      },
                      "image.$.merge": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$unset": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "boolean",
                        "enum": [
                          true
                        ]
                      },
                      "description": {
                        "type": "boolean",
                        "enum": [
                          true
                        ]
                      },
                      "image": {
                        "type": "boolean",
                        "enum": [
                          true
                        ]
                      },
                      "allergene": {
                        "type": "boolean",
                        "enum": [
                          true
                        ]
                      }
                    },
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$inc": {
                    "type": "object",
                    "properties": {},
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$mul": {
                    "type": "object",
                    "properties": {},
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$currentDate": {
                    "type": "object",
                    "properties": {},
                    "additionalProperties": false
                  },
                  "$push": {
                    "type": "object",
                    "properties": {
                      "image": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "additionalProperties": false
                  },
                  "$setOnInsert": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "image": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": true
                        }
                      },
                      "allergene": {
                        "type": "boolean"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e41e"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "image": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "allergene": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/ingredients/{id}/state": {
      "post": {
        "summary": "Change state of an item of ingredients",
        "tags": [
          "Ingredients"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "description",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "allergene",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body8"
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/ingredients/state": {
      "post": {
        "summary": "Change state of items of ingredients",
        "tags": [
          "Ingredients"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "required": [
                        "_id"
                      ],
                      "properties": {
                        "_id": {
                          "type": "string",
                          "pattern": "^[a-fA-F\\d]{24}$",
                          "description": "Hexadecimal identifier of the document in the collection",
                          "example": "60a24a2a28a75f0013d7e4a5"
                        },
                        "creatorId": {
                          "type": "string",
                          "description": "creatorId"
                        },
                        "createdAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "createdAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "updaterId": {
                          "type": "string",
                          "description": "updaterId"
                        },
                        "updatedAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "updatedAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "name": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "image": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "additionalProperties": true
                          }
                        },
                        "allergene": {
                          "type": "boolean"
                        }
                      }
                    },
                    "stateTo": {
                      "type": "string",
                      "enum": [
                        "PUBLIC",
                        "DRAFT",
                        "TRASH",
                        "DELETED"
                      ]
                    }
                  },
                  "required": [
                    "filter",
                    "stateTo"
                  ],
                  "additionalProperties": false
                },
                "minItems": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Number of updated ingredients",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "Number of updated ingredients"
                }
              }
            }
          }
        }
      }
    },
    "/v2/cmsmenu/": {
      "get": {
        "summary": "Get a list of cmsmenu",
        "description": "The list can be filtered specifying the following parameters",
        "tags": [
          "Cmsmenu"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e3ff",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "_order",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "icon",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "link",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "iframe",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|_order|icon|link|iframe|groups),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|_order|icon|link|iframe|groups)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "Limits the number of documents, max 200 elements, minimum 1",
            "required": false,
            "name": "_l",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 25
            }
          },
          {
            "description": "Skip the specified number of documents",
            "required": false,
            "name": "_sk",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
            "required": false,
            "name": "_s",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|_order|icon|link|iframe)$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "_id",
                        "example": "60a24a2a28a75f0013d7e3fe"
                      },
                      "creatorId": {
                        "type": "string",
                        "description": "creatorId"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-16T12:00:00.000Z",
                        "description": "createdAt"
                      },
                      "updaterId": {
                        "type": "string",
                        "description": "updaterId"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-16T12:00:00.000Z",
                        "description": "updatedAt"
                      },
                      "__STATE__": {
                        "type": "string",
                        "description": "__STATE__"
                      },
                      "name": {
                        "type": "string"
                      },
                      "_order": {
                        "type": "number"
                      },
                      "icon": {
                        "type": "string"
                      },
                      "link": {
                        "type": "string"
                      },
                      "iframe": {
                        "type": "boolean"
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new item to the cmsmenu collection",
        "tags": [
          "Cmsmenu"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "icon",
                  "link",
                  "iframe",
                  "groups"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "_order": {
                    "type": "number"
                  },
                  "icon": {
                    "type": "string"
                  },
                  "link": {
                    "type": "string"
                  },
                  "iframe": {
                    "type": "boolean"
                  },
                  "groups": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "__STATE__": {
                    "type": "string",
                    "enum": [
                      "PUBLIC",
                      "DRAFT",
                      "TRASH",
                      "DELETED"
                    ],
                    "description": "The state of the document",
                    "default": "DRAFT"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e482"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete items from the cmsmenu collection",
        "tags": [
          "Cmsmenu"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "_order",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "icon",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "link",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "iframe",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update the items of the cmsmenu collection that match the query",
        "tags": [
          "Cmsmenu"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e401",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "_order",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "icon",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "link",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "iframe",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body14"
        },
        "responses": {
          "200": {
            "description": "the number of documents that were modified",
            "content": {
              "*/*": {
                "schema": {
                  "type": "number",
                  "description": "the number of documents that were modified"
                }
              }
            }
          }
        }
      }
    },
    "/v2/cmsmenu/export": {
      "get": {
        "summary": "Export the cmsmenu collection",
        "description": "The exported documents are sent as newline separated JSON objects to facilitate large dataset streaming and parsing",
        "tags": [
          "Cmsmenu"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e400",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "_order",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "icon",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "link",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "iframe",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|_order|icon|link|iframe|groups),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|_order|icon|link|iframe|groups)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "Limits the number of documents",
            "required": false,
            "name": "_l",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "description": "Skip the specified number of documents",
            "required": false,
            "name": "_sk",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
            "required": false,
            "name": "_s",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|_order|icon|link|iframe)$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/cmsmenu/{id}": {
      "get": {
        "summary": "Find one item from the cmsmenu collection by ID",
        "tags": [
          "Cmsmenu"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "_order",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "icon",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "link",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "iframe",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|_order|icon|link|iframe|groups),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|_order|icon|link|iframe|groups)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e3fe"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "name": {
                      "type": "string"
                    },
                    "_order": {
                      "type": "number"
                    },
                    "icon": {
                      "type": "string"
                    },
                    "link": {
                      "type": "string"
                    },
                    "iframe": {
                      "type": "boolean"
                    },
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an item from the cmsmenu collection",
        "tags": [
          "Cmsmenu"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "_order",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "icon",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "link",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "iframe",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update an item of the cmsmenu collection by ID",
        "tags": [
          "Cmsmenu"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "_order",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "icon",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "link",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "iframe",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body14"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e3fe"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "name": {
                      "type": "string"
                    },
                    "_order": {
                      "type": "number"
                    },
                    "icon": {
                      "type": "string"
                    },
                    "link": {
                      "type": "string"
                    },
                    "iframe": {
                      "type": "boolean"
                    },
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/cmsmenu/count": {
      "get": {
        "summary": "Count the number of cmsmenu",
        "tags": [
          "Cmsmenu"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e401",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "_order",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "icon",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "link",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "iframe",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          }
        }
      }
    },
    "/v2/cmsmenu/bulk": {
      "post": {
        "summary": "Insert new cmsmenu",
        "tags": [
          "Cmsmenu"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "name",
                    "icon",
                    "link",
                    "iframe",
                    "groups"
                  ],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "_order": {
                      "type": "number"
                    },
                    "icon": {
                      "type": "string"
                    },
                    "link": {
                      "type": "string"
                    },
                    "iframe": {
                      "type": "boolean"
                    },
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "__STATE__": {
                      "type": "string",
                      "enum": [
                        "PUBLIC",
                        "DRAFT",
                        "TRASH",
                        "DELETED"
                      ],
                      "description": "The state of the document",
                      "default": "DRAFT"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "Hexadecimal identifier of the document in the collection",
                        "example": "60a24a2a28a75f0013d7e483"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update multiple items of cmsmenu, each one with its own modifications",
        "tags": [
          "Cmsmenu"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "pattern": "^[a-fA-F\\d]{24}$",
                          "description": "Hexadecimal identifier of the document in the collection",
                          "example": "60a24a2a28a75f0013d7e484"
                        },
                        "_st": {
                          "type": "string",
                          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
                          "default": "PUBLIC",
                          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list"
                        },
                        "creatorId": {
                          "type": "string",
                          "description": "creatorId"
                        },
                        "createdAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "createdAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "updaterId": {
                          "type": "string",
                          "description": "updaterId"
                        },
                        "updatedAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "updatedAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "name": {
                          "type": "string"
                        },
                        "_order": {
                          "type": "number"
                        },
                        "icon": {
                          "type": "string"
                        },
                        "link": {
                          "type": "string"
                        },
                        "iframe": {
                          "type": "boolean"
                        },
                        "_q": {
                          "type": "string",
                          "description": "Additional query part to forward to MongoDB"
                        }
                      },
                      "additionalProperties": false
                    },
                    "update": {
                      "type": "object",
                      "properties": {
                        "$set": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "_order": {
                              "type": "number"
                            },
                            "icon": {
                              "type": "string"
                            },
                            "link": {
                              "type": "string"
                            },
                            "iframe": {
                              "type": "boolean"
                            },
                            "groups": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "groups.$.replace": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$unset": {
                          "type": "object",
                          "properties": {
                            "_order": {
                              "type": "boolean",
                              "enum": [
                                true
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$inc": {
                          "type": "object",
                          "properties": {
                            "_order": {
                              "type": "number"
                            }
                          },
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$mul": {
                          "type": "object",
                          "properties": {
                            "_order": {
                              "type": "number"
                            }
                          },
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$currentDate": {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": false
                        },
                        "$push": {
                          "type": "object",
                          "properties": {
                            "groups": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "filter",
                    "update"
                  ]
                },
                "minItems": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          }
        }
      }
    },
    "/v2/cmsmenu/upsert-one": {
      "post": {
        "summary": "Update an item of cmsmenu if it is present, otherwise insert it",
        "tags": [
          "Cmsmenu"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "_order",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "icon",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "link",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "iframe",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "$set": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "_order": {
                        "type": "number"
                      },
                      "icon": {
                        "type": "string"
                      },
                      "link": {
                        "type": "string"
                      },
                      "iframe": {
                        "type": "boolean"
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "groups.$.replace": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$unset": {
                    "type": "object",
                    "properties": {
                      "_order": {
                        "type": "boolean",
                        "enum": [
                          true
                        ]
                      }
                    },
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$inc": {
                    "type": "object",
                    "properties": {
                      "_order": {
                        "type": "number"
                      }
                    },
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$mul": {
                    "type": "object",
                    "properties": {
                      "_order": {
                        "type": "number"
                      }
                    },
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$currentDate": {
                    "type": "object",
                    "properties": {},
                    "additionalProperties": false
                  },
                  "$push": {
                    "type": "object",
                    "properties": {
                      "groups": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "$setOnInsert": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "_order": {
                        "type": "number"
                      },
                      "icon": {
                        "type": "string"
                      },
                      "link": {
                        "type": "string"
                      },
                      "iframe": {
                        "type": "boolean"
                      },
                      "groups": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e3fe"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "name": {
                      "type": "string"
                    },
                    "_order": {
                      "type": "number"
                    },
                    "icon": {
                      "type": "string"
                    },
                    "link": {
                      "type": "string"
                    },
                    "iframe": {
                      "type": "boolean"
                    },
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/cmsmenu/{id}/state": {
      "post": {
        "summary": "Change state of an item of cmsmenu",
        "tags": [
          "Cmsmenu"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "_order",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "icon",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "link",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "iframe",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body8"
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/cmsmenu/state": {
      "post": {
        "summary": "Change state of items of cmsmenu",
        "tags": [
          "Cmsmenu"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "required": [
                        "_id"
                      ],
                      "properties": {
                        "_id": {
                          "type": "string",
                          "pattern": "^[a-fA-F\\d]{24}$",
                          "description": "Hexadecimal identifier of the document in the collection",
                          "example": "60a24a2a28a75f0013d7e485"
                        },
                        "creatorId": {
                          "type": "string",
                          "description": "creatorId"
                        },
                        "createdAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "createdAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "updaterId": {
                          "type": "string",
                          "description": "updaterId"
                        },
                        "updatedAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "updatedAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "name": {
                          "type": "string"
                        },
                        "_order": {
                          "type": "number"
                        },
                        "icon": {
                          "type": "string"
                        },
                        "link": {
                          "type": "string"
                        },
                        "iframe": {
                          "type": "boolean"
                        }
                      }
                    },
                    "stateTo": {
                      "type": "string",
                      "enum": [
                        "PUBLIC",
                        "DRAFT",
                        "TRASH",
                        "DELETED"
                      ]
                    }
                  },
                  "required": [
                    "filter",
                    "stateTo"
                  ],
                  "additionalProperties": false
                },
                "minItems": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Number of updated cmsmenu",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "Number of updated cmsmenu"
                }
              }
            }
          }
        }
      }
    },
    "/v2/customers/": {
      "get": {
        "summary": "Get a list of customers",
        "description": "The list can be filtered specifying the following parameters",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e407",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "deliveryAddress",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "surname",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|email|deliveryAddress|phone|surname),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|email|deliveryAddress|phone|surname)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "Limits the number of documents, max 200 elements, minimum 1",
            "required": false,
            "name": "_l",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 25
            }
          },
          {
            "description": "Skip the specified number of documents",
            "required": false,
            "name": "_sk",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
            "required": false,
            "name": "_s",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|email|deliveryAddress|phone|surname)$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "_id",
                        "example": "60a24a2a28a75f0013d7e406"
                      },
                      "creatorId": {
                        "type": "string",
                        "description": "creatorId"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-16T12:00:00.000Z",
                        "description": "createdAt"
                      },
                      "updaterId": {
                        "type": "string",
                        "description": "updaterId"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-16T12:00:00.000Z",
                        "description": "updatedAt"
                      },
                      "__STATE__": {
                        "type": "string",
                        "description": "__STATE__"
                      },
                      "name": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "deliveryAddress": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "number"
                      },
                      "surname": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new item to the customers collection",
        "tags": [
          "Customers"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "deliveryAddress": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "number"
                  },
                  "surname": {
                    "type": "string"
                  },
                  "__STATE__": {
                    "type": "string",
                    "enum": [
                      "PUBLIC",
                      "DRAFT",
                      "TRASH",
                      "DELETED"
                    ],
                    "description": "The state of the document",
                    "default": "DRAFT"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e48a"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete items from the customers collection",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "deliveryAddress",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "surname",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update the items of the customers collection that match the query",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e409",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "deliveryAddress",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "surname",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body15"
        },
        "responses": {
          "200": {
            "description": "the number of documents that were modified",
            "content": {
              "*/*": {
                "schema": {
                  "type": "number",
                  "description": "the number of documents that were modified"
                }
              }
            }
          }
        }
      }
    },
    "/v2/customers/export": {
      "get": {
        "summary": "Export the customers collection",
        "description": "The exported documents are sent as newline separated JSON objects to facilitate large dataset streaming and parsing",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e408",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "deliveryAddress",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "surname",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|email|deliveryAddress|phone|surname),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|email|deliveryAddress|phone|surname)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "Limits the number of documents",
            "required": false,
            "name": "_l",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "description": "Skip the specified number of documents",
            "required": false,
            "name": "_sk",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
            "required": false,
            "name": "_s",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|email|deliveryAddress|phone|surname)$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/customers/{id}": {
      "get": {
        "summary": "Find one item from the customers collection by ID",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "deliveryAddress",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "surname",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|email|deliveryAddress|phone|surname),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|email|deliveryAddress|phone|surname)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e406"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "deliveryAddress": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "number"
                    },
                    "surname": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an item from the customers collection",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "deliveryAddress",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "surname",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update an item of the customers collection by ID",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "deliveryAddress",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "surname",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body15"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e406"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "deliveryAddress": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "number"
                    },
                    "surname": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/customers/count": {
      "get": {
        "summary": "Count the number of customers",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e409",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "deliveryAddress",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "surname",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          }
        }
      }
    },
    "/v2/customers/bulk": {
      "post": {
        "summary": "Insert new customers",
        "tags": [
          "Customers"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "deliveryAddress": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "number"
                    },
                    "surname": {
                      "type": "string"
                    },
                    "__STATE__": {
                      "type": "string",
                      "enum": [
                        "PUBLIC",
                        "DRAFT",
                        "TRASH",
                        "DELETED"
                      ],
                      "description": "The state of the document",
                      "default": "DRAFT"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "Hexadecimal identifier of the document in the collection",
                        "example": "60a24a2a28a75f0013d7e48b"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update multiple items of customers, each one with its own modifications",
        "tags": [
          "Customers"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "pattern": "^[a-fA-F\\d]{24}$",
                          "description": "Hexadecimal identifier of the document in the collection",
                          "example": "60a24a2a28a75f0013d7e48c"
                        },
                        "_st": {
                          "type": "string",
                          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
                          "default": "PUBLIC",
                          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list"
                        },
                        "creatorId": {
                          "type": "string",
                          "description": "creatorId"
                        },
                        "createdAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "createdAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "updaterId": {
                          "type": "string",
                          "description": "updaterId"
                        },
                        "updatedAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "updatedAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "deliveryAddress": {
                          "type": "string"
                        },
                        "phone": {
                          "type": "number"
                        },
                        "surname": {
                          "type": "string"
                        },
                        "_q": {
                          "type": "string",
                          "description": "Additional query part to forward to MongoDB"
                        }
                      },
                      "additionalProperties": false
                    },
                    "update": {
                      "type": "object",
                      "properties": {
                        "$set": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "email": {
                              "type": "string"
                            },
                            "deliveryAddress": {
                              "type": "string"
                            },
                            "phone": {
                              "type": "number"
                            },
                            "surname": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$unset": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "boolean",
                              "enum": [
                                true
                              ]
                            },
                            "email": {
                              "type": "boolean",
                              "enum": [
                                true
                              ]
                            },
                            "deliveryAddress": {
                              "type": "boolean",
                              "enum": [
                                true
                              ]
                            },
                            "phone": {
                              "type": "boolean",
                              "enum": [
                                true
                              ]
                            },
                            "surname": {
                              "type": "boolean",
                              "enum": [
                                true
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$inc": {
                          "type": "object",
                          "properties": {
                            "phone": {
                              "type": "number"
                            }
                          },
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$mul": {
                          "type": "object",
                          "properties": {
                            "phone": {
                              "type": "number"
                            }
                          },
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$currentDate": {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": false
                        },
                        "$push": {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "filter",
                    "update"
                  ]
                },
                "minItems": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          }
        }
      }
    },
    "/v2/customers/upsert-one": {
      "post": {
        "summary": "Update an item of customers if it is present, otherwise insert it",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "deliveryAddress",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "surname",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "$set": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "deliveryAddress": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "number"
                      },
                      "surname": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$unset": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "boolean",
                        "enum": [
                          true
                        ]
                      },
                      "email": {
                        "type": "boolean",
                        "enum": [
                          true
                        ]
                      },
                      "deliveryAddress": {
                        "type": "boolean",
                        "enum": [
                          true
                        ]
                      },
                      "phone": {
                        "type": "boolean",
                        "enum": [
                          true
                        ]
                      },
                      "surname": {
                        "type": "boolean",
                        "enum": [
                          true
                        ]
                      }
                    },
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$inc": {
                    "type": "object",
                    "properties": {
                      "phone": {
                        "type": "number"
                      }
                    },
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$mul": {
                    "type": "object",
                    "properties": {
                      "phone": {
                        "type": "number"
                      }
                    },
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$currentDate": {
                    "type": "object",
                    "properties": {},
                    "additionalProperties": false
                  },
                  "$push": {
                    "type": "object",
                    "properties": {},
                    "additionalProperties": false
                  },
                  "$setOnInsert": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "email": {
                        "type": "string"
                      },
                      "deliveryAddress": {
                        "type": "string"
                      },
                      "phone": {
                        "type": "number"
                      },
                      "surname": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e406"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "deliveryAddress": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "number"
                    },
                    "surname": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/customers/{id}/state": {
      "post": {
        "summary": "Change state of an item of customers",
        "tags": [
          "Customers"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "email",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "deliveryAddress",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "phone",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "required": false,
            "name": "surname",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body8"
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/customers/state": {
      "post": {
        "summary": "Change state of items of customers",
        "tags": [
          "Customers"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "required": [
                        "_id"
                      ],
                      "properties": {
                        "_id": {
                          "type": "string",
                          "pattern": "^[a-fA-F\\d]{24}$",
                          "description": "Hexadecimal identifier of the document in the collection",
                          "example": "60a24a2a28a75f0013d7e48d"
                        },
                        "creatorId": {
                          "type": "string",
                          "description": "creatorId"
                        },
                        "createdAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "createdAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "updaterId": {
                          "type": "string",
                          "description": "updaterId"
                        },
                        "updatedAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "updatedAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string"
                        },
                        "deliveryAddress": {
                          "type": "string"
                        },
                        "phone": {
                          "type": "number"
                        },
                        "surname": {
                          "type": "string"
                        }
                      }
                    },
                    "stateTo": {
                      "type": "string",
                      "enum": [
                        "PUBLIC",
                        "DRAFT",
                        "TRASH",
                        "DELETED"
                      ]
                    }
                  },
                  "required": [
                    "filter",
                    "stateTo"
                  ],
                  "additionalProperties": false
                },
                "minItems": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Number of updated customers",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "Number of updated customers"
                }
              }
            }
          }
        }
      }
    },
    "/v2/provinces/": {
      "get": {
        "summary": "Get a list of provinces",
        "description": "The list can be filtered specifying the following parameters",
        "tags": [
          "Provinces"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e45f",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "es: mi",
            "required": false,
            "name": "code",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "es: it",
            "required": false,
            "name": "countryCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "es: Milano",
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "used for data generation purpose. value from 0 to 1",
            "required": false,
            "name": "weight",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|code|countryCode|name|weight),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|code|countryCode|name|weight)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "Limits the number of documents, max 200 elements, minimum 1",
            "required": false,
            "name": "_l",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 25
            }
          },
          {
            "description": "Skip the specified number of documents",
            "required": false,
            "name": "_sk",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
            "required": false,
            "name": "_s",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|code|countryCode|name|weight)$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "_id",
                        "example": "60a24a2a28a75f0013d7e45e"
                      },
                      "creatorId": {
                        "type": "string",
                        "description": "creatorId"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-16T12:00:00.000Z",
                        "description": "createdAt"
                      },
                      "updaterId": {
                        "type": "string",
                        "description": "updaterId"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-16T12:00:00.000Z",
                        "description": "updatedAt"
                      },
                      "__STATE__": {
                        "type": "string",
                        "description": "__STATE__"
                      },
                      "code": {
                        "type": "string",
                        "description": "es: mi"
                      },
                      "countryCode": {
                        "type": "string",
                        "description": "es: it"
                      },
                      "name": {
                        "type": "string",
                        "description": "es: Milano"
                      },
                      "weight": {
                        "type": "number",
                        "description": "used for data generation purpose. value from 0 to 1"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new item to the provinces collection",
        "tags": [
          "Provinces"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "code",
                  "countryCode",
                  "name",
                  "weight"
                ],
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "es: mi"
                  },
                  "countryCode": {
                    "type": "string",
                    "description": "es: it"
                  },
                  "name": {
                    "type": "string",
                    "description": "es: Milano"
                  },
                  "weight": {
                    "type": "number",
                    "description": "used for data generation purpose. value from 0 to 1"
                  },
                  "__STATE__": {
                    "type": "string",
                    "enum": [
                      "PUBLIC",
                      "DRAFT",
                      "TRASH",
                      "DELETED"
                    ],
                    "description": "The state of the document",
                    "default": "PUBLIC"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2b28a75f0013d7e4ba"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete items from the provinces collection",
        "tags": [
          "Provinces"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "es: mi",
            "required": false,
            "name": "code",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "es: it",
            "required": false,
            "name": "countryCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "es: Milano",
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "used for data generation purpose. value from 0 to 1",
            "required": false,
            "name": "weight",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update the items of the provinces collection that match the query",
        "tags": [
          "Provinces"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e461",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "es: mi",
            "required": false,
            "name": "code",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "es: it",
            "required": false,
            "name": "countryCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "es: Milano",
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "used for data generation purpose. value from 0 to 1",
            "required": false,
            "name": "weight",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body16"
        },
        "responses": {
          "200": {
            "description": "the number of documents that were modified",
            "content": {
              "*/*": {
                "schema": {
                  "type": "number",
                  "description": "the number of documents that were modified"
                }
              }
            }
          }
        }
      }
    },
    "/v2/provinces/export": {
      "get": {
        "summary": "Export the provinces collection",
        "description": "The exported documents are sent as newline separated JSON objects to facilitate large dataset streaming and parsing",
        "tags": [
          "Provinces"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e460",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "es: mi",
            "required": false,
            "name": "code",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "es: it",
            "required": false,
            "name": "countryCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "es: Milano",
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "used for data generation purpose. value from 0 to 1",
            "required": false,
            "name": "weight",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|code|countryCode|name|weight),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|code|countryCode|name|weight)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "Limits the number of documents",
            "required": false,
            "name": "_l",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "description": "Skip the specified number of documents",
            "required": false,
            "name": "_sk",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
            "required": false,
            "name": "_s",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|code|countryCode|name|weight)$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/provinces/{id}": {
      "get": {
        "summary": "Find one item from the provinces collection by ID",
        "tags": [
          "Provinces"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "es: mi",
            "required": false,
            "name": "code",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "es: it",
            "required": false,
            "name": "countryCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "es: Milano",
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "used for data generation purpose. value from 0 to 1",
            "required": false,
            "name": "weight",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|code|countryCode|name|weight),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|code|countryCode|name|weight)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e45e"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "code": {
                      "type": "string",
                      "description": "es: mi"
                    },
                    "countryCode": {
                      "type": "string",
                      "description": "es: it"
                    },
                    "name": {
                      "type": "string",
                      "description": "es: Milano"
                    },
                    "weight": {
                      "type": "number",
                      "description": "used for data generation purpose. value from 0 to 1"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an item from the provinces collection",
        "tags": [
          "Provinces"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "es: mi",
            "required": false,
            "name": "code",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "es: it",
            "required": false,
            "name": "countryCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "es: Milano",
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "used for data generation purpose. value from 0 to 1",
            "required": false,
            "name": "weight",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update an item of the provinces collection by ID",
        "tags": [
          "Provinces"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "es: mi",
            "required": false,
            "name": "code",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "es: it",
            "required": false,
            "name": "countryCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "es: Milano",
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "used for data generation purpose. value from 0 to 1",
            "required": false,
            "name": "weight",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body16"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e45e"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "code": {
                      "type": "string",
                      "description": "es: mi"
                    },
                    "countryCode": {
                      "type": "string",
                      "description": "es: it"
                    },
                    "name": {
                      "type": "string",
                      "description": "es: Milano"
                    },
                    "weight": {
                      "type": "number",
                      "description": "used for data generation purpose. value from 0 to 1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/provinces/count": {
      "get": {
        "summary": "Count the number of provinces",
        "tags": [
          "Provinces"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e461",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "es: mi",
            "required": false,
            "name": "code",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "es: it",
            "required": false,
            "name": "countryCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "es: Milano",
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "used for data generation purpose. value from 0 to 1",
            "required": false,
            "name": "weight",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          }
        }
      }
    },
    "/v2/provinces/bulk": {
      "post": {
        "summary": "Insert new provinces",
        "tags": [
          "Provinces"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "code",
                    "countryCode",
                    "name",
                    "weight"
                  ],
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "es: mi"
                    },
                    "countryCode": {
                      "type": "string",
                      "description": "es: it"
                    },
                    "name": {
                      "type": "string",
                      "description": "es: Milano"
                    },
                    "weight": {
                      "type": "number",
                      "description": "used for data generation purpose. value from 0 to 1"
                    },
                    "__STATE__": {
                      "type": "string",
                      "enum": [
                        "PUBLIC",
                        "DRAFT",
                        "TRASH",
                        "DELETED"
                      ],
                      "description": "The state of the document",
                      "default": "PUBLIC"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "Hexadecimal identifier of the document in the collection",
                        "example": "60a24a2b28a75f0013d7e4bb"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update multiple items of provinces, each one with its own modifications",
        "tags": [
          "Provinces"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "pattern": "^[a-fA-F\\d]{24}$",
                          "description": "Hexadecimal identifier of the document in the collection",
                          "example": "60a24a2b28a75f0013d7e4bc"
                        },
                        "_st": {
                          "type": "string",
                          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
                          "default": "PUBLIC",
                          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list"
                        },
                        "creatorId": {
                          "type": "string",
                          "description": "creatorId"
                        },
                        "createdAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "createdAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "updaterId": {
                          "type": "string",
                          "description": "updaterId"
                        },
                        "updatedAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "updatedAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "code": {
                          "type": "string",
                          "description": "es: mi"
                        },
                        "countryCode": {
                          "type": "string",
                          "description": "es: it"
                        },
                        "name": {
                          "type": "string",
                          "description": "es: Milano"
                        },
                        "weight": {
                          "type": "number",
                          "description": "used for data generation purpose. value from 0 to 1"
                        },
                        "_q": {
                          "type": "string",
                          "description": "Additional query part to forward to MongoDB"
                        }
                      },
                      "additionalProperties": false
                    },
                    "update": {
                      "type": "object",
                      "properties": {
                        "$set": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string",
                              "description": "es: mi"
                            },
                            "countryCode": {
                              "type": "string",
                              "description": "es: it"
                            },
                            "name": {
                              "type": "string",
                              "description": "es: Milano"
                            },
                            "weight": {
                              "type": "number",
                              "description": "used for data generation purpose. value from 0 to 1"
                            }
                          },
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$unset": {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$inc": {
                          "type": "object",
                          "properties": {
                            "weight": {
                              "type": "number"
                            }
                          },
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$mul": {
                          "type": "object",
                          "properties": {
                            "weight": {
                              "type": "number"
                            }
                          },
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$currentDate": {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": false
                        },
                        "$push": {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "filter",
                    "update"
                  ]
                },
                "minItems": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          }
        }
      }
    },
    "/v2/provinces/upsert-one": {
      "post": {
        "summary": "Update an item of provinces if it is present, otherwise insert it",
        "tags": [
          "Provinces"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "es: mi",
            "required": false,
            "name": "code",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "es: it",
            "required": false,
            "name": "countryCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "es: Milano",
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "used for data generation purpose. value from 0 to 1",
            "required": false,
            "name": "weight",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "$set": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "es: mi"
                      },
                      "countryCode": {
                        "type": "string",
                        "description": "es: it"
                      },
                      "name": {
                        "type": "string",
                        "description": "es: Milano"
                      },
                      "weight": {
                        "type": "number",
                        "description": "used for data generation purpose. value from 0 to 1"
                      }
                    },
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$unset": {
                    "type": "object",
                    "properties": {},
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$inc": {
                    "type": "object",
                    "properties": {
                      "weight": {
                        "type": "number"
                      }
                    },
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$mul": {
                    "type": "object",
                    "properties": {
                      "weight": {
                        "type": "number"
                      }
                    },
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$currentDate": {
                    "type": "object",
                    "properties": {},
                    "additionalProperties": false
                  },
                  "$push": {
                    "type": "object",
                    "properties": {},
                    "additionalProperties": false
                  },
                  "$setOnInsert": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "es: mi"
                      },
                      "countryCode": {
                        "type": "string",
                        "description": "es: it"
                      },
                      "name": {
                        "type": "string",
                        "description": "es: Milano"
                      },
                      "weight": {
                        "type": "number",
                        "description": "used for data generation purpose. value from 0 to 1"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e45e"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "code": {
                      "type": "string",
                      "description": "es: mi"
                    },
                    "countryCode": {
                      "type": "string",
                      "description": "es: it"
                    },
                    "name": {
                      "type": "string",
                      "description": "es: Milano"
                    },
                    "weight": {
                      "type": "number",
                      "description": "used for data generation purpose. value from 0 to 1"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/provinces/{id}/state": {
      "post": {
        "summary": "Change state of an item of provinces",
        "tags": [
          "Provinces"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "es: mi",
            "required": false,
            "name": "code",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "es: it",
            "required": false,
            "name": "countryCode",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "es: Milano",
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "used for data generation purpose. value from 0 to 1",
            "required": false,
            "name": "weight",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body8"
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/provinces/state": {
      "post": {
        "summary": "Change state of items of provinces",
        "tags": [
          "Provinces"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "required": [
                        "_id"
                      ],
                      "properties": {
                        "_id": {
                          "type": "string",
                          "pattern": "^[a-fA-F\\d]{24}$",
                          "description": "Hexadecimal identifier of the document in the collection",
                          "example": "60a24a2b28a75f0013d7e4bd"
                        },
                        "creatorId": {
                          "type": "string",
                          "description": "creatorId"
                        },
                        "createdAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "createdAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "updaterId": {
                          "type": "string",
                          "description": "updaterId"
                        },
                        "updatedAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "updatedAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "code": {
                          "type": "string",
                          "description": "es: mi"
                        },
                        "countryCode": {
                          "type": "string",
                          "description": "es: it"
                        },
                        "name": {
                          "type": "string",
                          "description": "es: Milano"
                        },
                        "weight": {
                          "type": "number",
                          "description": "used for data generation purpose. value from 0 to 1"
                        }
                      }
                    },
                    "stateTo": {
                      "type": "string",
                      "enum": [
                        "PUBLIC",
                        "DRAFT",
                        "TRASH",
                        "DELETED"
                      ]
                    }
                  },
                  "required": [
                    "filter",
                    "stateTo"
                  ],
                  "additionalProperties": false
                },
                "minItems": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Number of updated provinces",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "Number of updated provinces"
                }
              }
            }
          }
        }
      }
    },
    "/v2/messages/": {
      "get": {
        "summary": "Get a list of Messages",
        "description": "The list can be filtered specifying the following parameters",
        "tags": [
          "Messages"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e3f7",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "mymsg",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "who",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|mymsg|who),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|mymsg|who)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "Limits the number of documents, max 200 elements, minimum 1",
            "required": false,
            "name": "_l",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 25
            }
          },
          {
            "description": "Skip the specified number of documents",
            "required": false,
            "name": "_sk",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
            "required": false,
            "name": "_s",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|mymsg|who)$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "_id",
                        "example": "60a24a2a28a75f0013d7e3f6"
                      },
                      "creatorId": {
                        "type": "string",
                        "description": "creatorId"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-16T12:00:00.000Z",
                        "description": "createdAt"
                      },
                      "updaterId": {
                        "type": "string",
                        "description": "updaterId"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-16T12:00:00.000Z",
                        "description": "updatedAt"
                      },
                      "__STATE__": {
                        "type": "string",
                        "description": "__STATE__"
                      },
                      "mymsg": {
                        "type": "string"
                      },
                      "who": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new item to the Messages collection",
        "tags": [
          "Messages"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "mymsg",
                  "who"
                ],
                "properties": {
                  "mymsg": {
                    "type": "string"
                  },
                  "who": {
                    "type": "string"
                  },
                  "__STATE__": {
                    "type": "string",
                    "enum": [
                      "PUBLIC",
                      "DRAFT",
                      "TRASH",
                      "DELETED"
                    ],
                    "description": "The state of the document",
                    "default": "PUBLIC"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e47a"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete items from the Messages collection",
        "tags": [
          "Messages"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "mymsg",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "who",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update the items of the Messages collection that match the query",
        "tags": [
          "Messages"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e3f9",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "mymsg",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "who",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body17"
        },
        "responses": {
          "200": {
            "description": "the number of documents that were modified",
            "content": {
              "*/*": {
                "schema": {
                  "type": "number",
                  "description": "the number of documents that were modified"
                }
              }
            }
          }
        }
      }
    },
    "/v2/messages/export": {
      "get": {
        "summary": "Export the Messages collection",
        "description": "The exported documents are sent as newline separated JSON objects to facilitate large dataset streaming and parsing",
        "tags": [
          "Messages"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e3f8",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "mymsg",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "who",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|mymsg|who),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|mymsg|who)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "Limits the number of documents",
            "required": false,
            "name": "_l",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "description": "Skip the specified number of documents",
            "required": false,
            "name": "_sk",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
            "required": false,
            "name": "_s",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|mymsg|who)$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/messages/{id}": {
      "get": {
        "summary": "Find one item from the Messages collection by ID",
        "tags": [
          "Messages"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "mymsg",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "who",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|mymsg|who),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|mymsg|who)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e3f6"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "mymsg": {
                      "type": "string"
                    },
                    "who": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an item from the Messages collection",
        "tags": [
          "Messages"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "mymsg",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "who",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update an item of the Messages collection by ID",
        "tags": [
          "Messages"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "mymsg",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "who",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body17"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e3f6"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "mymsg": {
                      "type": "string"
                    },
                    "who": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/messages/count": {
      "get": {
        "summary": "Count the number of Messages",
        "tags": [
          "Messages"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e3f9",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "mymsg",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "who",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          }
        }
      }
    },
    "/v2/messages/bulk": {
      "post": {
        "summary": "Insert new Messages",
        "tags": [
          "Messages"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "mymsg",
                    "who"
                  ],
                  "properties": {
                    "mymsg": {
                      "type": "string"
                    },
                    "who": {
                      "type": "string"
                    },
                    "__STATE__": {
                      "type": "string",
                      "enum": [
                        "PUBLIC",
                        "DRAFT",
                        "TRASH",
                        "DELETED"
                      ],
                      "description": "The state of the document",
                      "default": "PUBLIC"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "Hexadecimal identifier of the document in the collection",
                        "example": "60a24a2a28a75f0013d7e47b"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update multiple items of Messages, each one with its own modifications",
        "tags": [
          "Messages"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "pattern": "^[a-fA-F\\d]{24}$",
                          "description": "Hexadecimal identifier of the document in the collection",
                          "example": "60a24a2a28a75f0013d7e47c"
                        },
                        "_st": {
                          "type": "string",
                          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
                          "default": "PUBLIC",
                          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list"
                        },
                        "creatorId": {
                          "type": "string",
                          "description": "creatorId"
                        },
                        "createdAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "createdAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "updaterId": {
                          "type": "string",
                          "description": "updaterId"
                        },
                        "updatedAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "updatedAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "mymsg": {
                          "type": "string"
                        },
                        "who": {
                          "type": "string"
                        },
                        "_q": {
                          "type": "string",
                          "description": "Additional query part to forward to MongoDB"
                        }
                      },
                      "additionalProperties": false
                    },
                    "update": {
                      "type": "object",
                      "properties": {
                        "$set": {
                          "type": "object",
                          "properties": {
                            "mymsg": {
                              "type": "string"
                            },
                            "who": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$unset": {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$inc": {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$mul": {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$currentDate": {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": false
                        },
                        "$push": {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "filter",
                    "update"
                  ]
                },
                "minItems": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          }
        }
      }
    },
    "/v2/messages/upsert-one": {
      "post": {
        "summary": "Update an item of Messages if it is present, otherwise insert it",
        "tags": [
          "Messages"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "mymsg",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "who",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "$set": {
                    "type": "object",
                    "properties": {
                      "mymsg": {
                        "type": "string"
                      },
                      "who": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$unset": {
                    "type": "object",
                    "properties": {},
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$inc": {
                    "type": "object",
                    "properties": {},
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$mul": {
                    "type": "object",
                    "properties": {},
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$currentDate": {
                    "type": "object",
                    "properties": {},
                    "additionalProperties": false
                  },
                  "$push": {
                    "type": "object",
                    "properties": {},
                    "additionalProperties": false
                  },
                  "$setOnInsert": {
                    "type": "object",
                    "properties": {
                      "mymsg": {
                        "type": "string"
                      },
                      "who": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e3f6"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "mymsg": {
                      "type": "string"
                    },
                    "who": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/messages/{id}/state": {
      "post": {
        "summary": "Change state of an item of Messages",
        "tags": [
          "Messages"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "mymsg",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "who",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body8"
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/messages/state": {
      "post": {
        "summary": "Change state of items of Messages",
        "tags": [
          "Messages"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "required": [
                        "_id"
                      ],
                      "properties": {
                        "_id": {
                          "type": "string",
                          "pattern": "^[a-fA-F\\d]{24}$",
                          "description": "Hexadecimal identifier of the document in the collection",
                          "example": "60a24a2a28a75f0013d7e47d"
                        },
                        "creatorId": {
                          "type": "string",
                          "description": "creatorId"
                        },
                        "createdAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "createdAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "updaterId": {
                          "type": "string",
                          "description": "updaterId"
                        },
                        "updatedAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "updatedAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "mymsg": {
                          "type": "string"
                        },
                        "who": {
                          "type": "string"
                        }
                      }
                    },
                    "stateTo": {
                      "type": "string",
                      "enum": [
                        "PUBLIC",
                        "DRAFT",
                        "TRASH",
                        "DELETED"
                      ]
                    }
                  },
                  "required": [
                    "filter",
                    "stateTo"
                  ],
                  "additionalProperties": false
                },
                "minItems": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Number of updated Messages",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "Number of updated Messages"
                }
              }
            }
          }
        }
      }
    },
    "/v2/status/": {
      "get": {
        "summary": "Get a list of status",
        "description": "The list can be filtered specifying the following parameters",
        "tags": [
          "Status"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e46f",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "label shown in CMS eg: Pending",
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "eg: PENDING",
            "required": false,
            "name": "statusId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "null if must not to be generated order by data-generator with this status. ",
            "required": false,
            "name": "step",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|statusId|step),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|statusId|step)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "Limits the number of documents, max 200 elements, minimum 1",
            "required": false,
            "name": "_l",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 25
            }
          },
          {
            "description": "Skip the specified number of documents",
            "required": false,
            "name": "_sk",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
            "required": false,
            "name": "_s",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|statusId|step)$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "_id",
                        "example": "60a24a2a28a75f0013d7e46e"
                      },
                      "creatorId": {
                        "type": "string",
                        "description": "creatorId"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-16T12:00:00.000Z",
                        "description": "createdAt"
                      },
                      "updaterId": {
                        "type": "string",
                        "description": "updaterId"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-16T12:00:00.000Z",
                        "description": "updatedAt"
                      },
                      "__STATE__": {
                        "type": "string",
                        "description": "__STATE__"
                      },
                      "name": {
                        "type": "string",
                        "description": "label shown in CMS eg: Pending"
                      },
                      "statusId": {
                        "type": "string",
                        "description": "eg: PENDING"
                      },
                      "step": {
                        "nullable": true,
                        "description": "null if must not to be generated order by data-generator with this status. ",
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new item to the status collection",
        "tags": [
          "Status"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "label shown in CMS eg: Pending"
                  },
                  "statusId": {
                    "type": "string",
                    "description": "eg: PENDING"
                  },
                  "step": {
                    "nullable": true,
                    "description": "null if must not to be generated order by data-generator with this status. ",
                    "type": "number"
                  },
                  "__STATE__": {
                    "type": "string",
                    "enum": [
                      "PUBLIC",
                      "DRAFT",
                      "TRASH",
                      "DELETED"
                    ],
                    "description": "The state of the document",
                    "default": "DRAFT"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2b28a75f0013d7e4ca"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete items from the status collection",
        "tags": [
          "Status"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "label shown in CMS eg: Pending",
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "eg: PENDING",
            "required": false,
            "name": "statusId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "null if must not to be generated order by data-generator with this status. ",
            "required": false,
            "name": "step",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update the items of the status collection that match the query",
        "tags": [
          "Status"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e471",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "label shown in CMS eg: Pending",
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "eg: PENDING",
            "required": false,
            "name": "statusId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "null if must not to be generated order by data-generator with this status. ",
            "required": false,
            "name": "step",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body3"
        },
        "responses": {
          "200": {
            "description": "the number of documents that were modified",
            "content": {
              "*/*": {
                "schema": {
                  "type": "number",
                  "description": "the number of documents that were modified"
                }
              }
            }
          }
        }
      }
    },
    "/v2/status/export": {
      "get": {
        "summary": "Export the status collection",
        "description": "The exported documents are sent as newline separated JSON objects to facilitate large dataset streaming and parsing",
        "tags": [
          "Status"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e470",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "label shown in CMS eg: Pending",
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "eg: PENDING",
            "required": false,
            "name": "statusId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "null if must not to be generated order by data-generator with this status. ",
            "required": false,
            "name": "step",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|statusId|step),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|statusId|step)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "Limits the number of documents",
            "required": false,
            "name": "_l",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "description": "Skip the specified number of documents",
            "required": false,
            "name": "_sk",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
            "required": false,
            "name": "_s",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|statusId|step)$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/status/{id}": {
      "get": {
        "summary": "Find one item from the status collection by ID",
        "tags": [
          "Status"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "label shown in CMS eg: Pending",
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "eg: PENDING",
            "required": false,
            "name": "statusId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "null if must not to be generated order by data-generator with this status. ",
            "required": false,
            "name": "step",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|statusId|step),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|statusId|step)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e46e"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "name": {
                      "type": "string",
                      "description": "label shown in CMS eg: Pending"
                    },
                    "statusId": {
                      "type": "string",
                      "description": "eg: PENDING"
                    },
                    "step": {
                      "nullable": true,
                      "description": "null if must not to be generated order by data-generator with this status. ",
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an item from the status collection",
        "tags": [
          "Status"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "label shown in CMS eg: Pending",
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "eg: PENDING",
            "required": false,
            "name": "statusId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "null if must not to be generated order by data-generator with this status. ",
            "required": false,
            "name": "step",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update an item of the status collection by ID",
        "tags": [
          "Status"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "label shown in CMS eg: Pending",
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "eg: PENDING",
            "required": false,
            "name": "statusId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "null if must not to be generated order by data-generator with this status. ",
            "required": false,
            "name": "step",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body3"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e46e"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "name": {
                      "type": "string",
                      "description": "label shown in CMS eg: Pending"
                    },
                    "statusId": {
                      "type": "string",
                      "description": "eg: PENDING"
                    },
                    "step": {
                      "nullable": true,
                      "description": "null if must not to be generated order by data-generator with this status. ",
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/status/count": {
      "get": {
        "summary": "Count the number of status",
        "tags": [
          "Status"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e471",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "label shown in CMS eg: Pending",
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "eg: PENDING",
            "required": false,
            "name": "statusId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "null if must not to be generated order by data-generator with this status. ",
            "required": false,
            "name": "step",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          }
        }
      }
    },
    "/v2/status/bulk": {
      "post": {
        "summary": "Insert new status",
        "tags": [
          "Status"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "label shown in CMS eg: Pending"
                    },
                    "statusId": {
                      "type": "string",
                      "description": "eg: PENDING"
                    },
                    "step": {
                      "nullable": true,
                      "description": "null if must not to be generated order by data-generator with this status. ",
                      "type": "number"
                    },
                    "__STATE__": {
                      "type": "string",
                      "enum": [
                        "PUBLIC",
                        "DRAFT",
                        "TRASH",
                        "DELETED"
                      ],
                      "description": "The state of the document",
                      "default": "DRAFT"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "Hexadecimal identifier of the document in the collection",
                        "example": "60a24a2b28a75f0013d7e4cb"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update multiple items of status, each one with its own modifications",
        "tags": [
          "Status"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "pattern": "^[a-fA-F\\d]{24}$",
                          "description": "Hexadecimal identifier of the document in the collection",
                          "example": "60a24a2b28a75f0013d7e4cc"
                        },
                        "_st": {
                          "type": "string",
                          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
                          "default": "PUBLIC",
                          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list"
                        },
                        "creatorId": {
                          "type": "string",
                          "description": "creatorId"
                        },
                        "createdAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "createdAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "updaterId": {
                          "type": "string",
                          "description": "updaterId"
                        },
                        "updatedAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "updatedAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "name": {
                          "type": "string",
                          "description": "label shown in CMS eg: Pending"
                        },
                        "statusId": {
                          "type": "string",
                          "description": "eg: PENDING"
                        },
                        "step": {
                          "type": "number",
                          "description": "null if must not to be generated order by data-generator with this status. "
                        },
                        "_q": {
                          "type": "string",
                          "description": "Additional query part to forward to MongoDB"
                        }
                      },
                      "additionalProperties": false
                    },
                    "update": {
                      "type": "object",
                      "properties": {
                        "$set": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "label shown in CMS eg: Pending"
                            },
                            "statusId": {
                              "type": "string",
                              "description": "eg: PENDING"
                            },
                            "step": {
                              "nullable": true,
                              "description": "null if must not to be generated order by data-generator with this status. ",
                              "type": "number"
                            }
                          },
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$unset": {
                          "type": "object",
                          "properties": {
                            "statusId": {
                              "type": "boolean",
                              "enum": [
                                true
                              ]
                            },
                            "step": {
                              "type": "boolean",
                              "enum": [
                                true
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$inc": {
                          "type": "object",
                          "properties": {
                            "step": {
                              "type": "number"
                            }
                          },
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$mul": {
                          "type": "object",
                          "properties": {
                            "step": {
                              "type": "number"
                            }
                          },
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$currentDate": {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": false
                        },
                        "$push": {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "filter",
                    "update"
                  ]
                },
                "minItems": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          }
        }
      }
    },
    "/v2/status/upsert-one": {
      "post": {
        "summary": "Update an item of status if it is present, otherwise insert it",
        "tags": [
          "Status"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "label shown in CMS eg: Pending",
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "eg: PENDING",
            "required": false,
            "name": "statusId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "null if must not to be generated order by data-generator with this status. ",
            "required": false,
            "name": "step",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "$set": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "label shown in CMS eg: Pending"
                      },
                      "statusId": {
                        "type": "string",
                        "description": "eg: PENDING"
                      },
                      "step": {
                        "nullable": true,
                        "description": "null if must not to be generated order by data-generator with this status. ",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$unset": {
                    "type": "object",
                    "properties": {
                      "statusId": {
                        "type": "boolean",
                        "enum": [
                          true
                        ]
                      },
                      "step": {
                        "type": "boolean",
                        "enum": [
                          true
                        ]
                      }
                    },
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$inc": {
                    "type": "object",
                    "properties": {
                      "step": {
                        "type": "number"
                      }
                    },
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$mul": {
                    "type": "object",
                    "properties": {
                      "step": {
                        "type": "number"
                      }
                    },
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$currentDate": {
                    "type": "object",
                    "properties": {},
                    "additionalProperties": false
                  },
                  "$push": {
                    "type": "object",
                    "properties": {},
                    "additionalProperties": false
                  },
                  "$setOnInsert": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "label shown in CMS eg: Pending"
                      },
                      "statusId": {
                        "type": "string",
                        "description": "eg: PENDING"
                      },
                      "step": {
                        "nullable": true,
                        "description": "null if must not to be generated order by data-generator with this status. ",
                        "type": "number"
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e46e"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "name": {
                      "type": "string",
                      "description": "label shown in CMS eg: Pending"
                    },
                    "statusId": {
                      "type": "string",
                      "description": "eg: PENDING"
                    },
                    "step": {
                      "nullable": true,
                      "description": "null if must not to be generated order by data-generator with this status. ",
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/status/{id}/state": {
      "post": {
        "summary": "Change state of an item of status",
        "tags": [
          "Status"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "label shown in CMS eg: Pending",
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "eg: PENDING",
            "required": false,
            "name": "statusId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "null if must not to be generated order by data-generator with this status. ",
            "required": false,
            "name": "step",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body8"
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/status/state": {
      "post": {
        "summary": "Change state of items of status",
        "tags": [
          "Status"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "required": [
                        "_id"
                      ],
                      "properties": {
                        "_id": {
                          "type": "string",
                          "pattern": "^[a-fA-F\\d]{24}$",
                          "description": "Hexadecimal identifier of the document in the collection",
                          "example": "60a24a2b28a75f0013d7e4cd"
                        },
                        "creatorId": {
                          "type": "string",
                          "description": "creatorId"
                        },
                        "createdAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "createdAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "updaterId": {
                          "type": "string",
                          "description": "updaterId"
                        },
                        "updatedAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "updatedAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "name": {
                          "type": "string",
                          "description": "label shown in CMS eg: Pending"
                        },
                        "statusId": {
                          "type": "string",
                          "description": "eg: PENDING"
                        },
                        "step": {
                          "type": "number",
                          "description": "null if must not to be generated order by data-generator with this status. "
                        }
                      }
                    },
                    "stateTo": {
                      "type": "string",
                      "enum": [
                        "PUBLIC",
                        "DRAFT",
                        "TRASH",
                        "DELETED"
                      ]
                    }
                  },
                  "required": [
                    "filter",
                    "stateTo"
                  ],
                  "additionalProperties": false
                },
                "minItems": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Number of updated status",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "Number of updated status"
                }
              }
            }
          }
        }
      }
    },
    "/v2/menu/": {
      "get": {
        "summary": "Get a list of menu",
        "description": "The list can be filtered specifying the following parameters",
        "tags": [
          "Menu"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e427",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "price",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|price|dishes),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|price|dishes)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "Limits the number of documents, max 200 elements, minimum 1",
            "required": false,
            "name": "_l",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 200,
              "default": 25
            }
          },
          {
            "description": "Skip the specified number of documents",
            "required": false,
            "name": "_sk",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
            "required": false,
            "name": "_s",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|price)$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "_id",
                        "example": "60a24a2a28a75f0013d7e426"
                      },
                      "creatorId": {
                        "type": "string",
                        "description": "creatorId"
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-16T12:00:00.000Z",
                        "description": "createdAt"
                      },
                      "updaterId": {
                        "type": "string",
                        "description": "updaterId"
                      },
                      "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-09-16T12:00:00.000Z",
                        "description": "updatedAt"
                      },
                      "__STATE__": {
                        "type": "string",
                        "description": "__STATE__"
                      },
                      "name": {
                        "type": "string"
                      },
                      "price": {
                        "type": "number"
                      },
                      "dishes": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Add a new item to the menu collection",
        "tags": [
          "Menu"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name"
                ],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "price": {
                    "type": "number"
                  },
                  "dishes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "__STATE__": {
                    "type": "string",
                    "enum": [
                      "PUBLIC",
                      "DRAFT",
                      "TRASH",
                      "DELETED"
                    ],
                    "description": "The state of the document",
                    "default": "DRAFT"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e4aa"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete items from the menu collection",
        "tags": [
          "Menu"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "price",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update the items of the menu collection that match the query",
        "tags": [
          "Menu"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e429",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "price",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body4"
        },
        "responses": {
          "200": {
            "description": "the number of documents that were modified",
            "content": {
              "*/*": {
                "schema": {
                  "type": "number",
                  "description": "the number of documents that were modified"
                }
              }
            }
          }
        }
      }
    },
    "/v2/menu/export": {
      "get": {
        "summary": "Export the menu collection",
        "description": "The exported documents are sent as newline separated JSON objects to facilitate large dataset streaming and parsing",
        "tags": [
          "Menu"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e428",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "price",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|price|dishes),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|price|dishes)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "Limits the number of documents",
            "required": false,
            "name": "_l",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          },
          {
            "description": "Skip the specified number of documents",
            "required": false,
            "name": "_sk",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 0
            }
          },
          {
            "description": "Sort by the specified property (Start with a \"-\" to invert the sort order)",
            "required": false,
            "name": "_s",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^-?(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|price)$"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/menu/{id}": {
      "get": {
        "summary": "Find one item from the menu collection by ID",
        "tags": [
          "Menu"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "price",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Return only the properties specified in a comma separated list",
            "required": false,
            "name": "_p",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^((_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|price|dishes),)*(_id|creatorId|createdAt|updaterId|updatedAt|__STATE__|name|price|dishes)$"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e426"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "name": {
                      "type": "string"
                    },
                    "price": {
                      "type": "number"
                    },
                    "dishes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete an item from the menu collection",
        "tags": [
          "Menu"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "price",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      },
      "patch": {
        "summary": "Update an item of the menu collection by ID",
        "tags": [
          "Menu"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "price",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body4"
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e426"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "name": {
                      "type": "string"
                    },
                    "price": {
                      "type": "number"
                    },
                    "dishes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/menu/count": {
      "get": {
        "summary": "Count the number of menu",
        "tags": [
          "Menu"
        ],
        "parameters": [
          {
            "description": "Hexadecimal identifier of the document in the collection",
            "example": "60a24a2a28a75f0013d7e429",
            "required": false,
            "name": "_id",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^[a-fA-F\\d]{24}$"
            }
          },
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "price",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          }
        }
      }
    },
    "/v2/menu/bulk": {
      "post": {
        "summary": "Insert new menu",
        "tags": [
          "Menu"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "name"
                  ],
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "price": {
                      "type": "number"
                    },
                    "dishes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "__STATE__": {
                      "type": "string",
                      "enum": [
                        "PUBLIC",
                        "DRAFT",
                        "TRASH",
                        "DELETED"
                      ],
                      "description": "The state of the document",
                      "default": "DRAFT"
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "Hexadecimal identifier of the document in the collection",
                        "example": "60a24a2a28a75f0013d7e4ab"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update multiple items of menu, each one with its own modifications",
        "tags": [
          "Menu"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "properties": {
                        "_id": {
                          "type": "string",
                          "pattern": "^[a-fA-F\\d]{24}$",
                          "description": "Hexadecimal identifier of the document in the collection",
                          "example": "60a24a2a28a75f0013d7e4ac"
                        },
                        "_st": {
                          "type": "string",
                          "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
                          "default": "PUBLIC",
                          "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list"
                        },
                        "creatorId": {
                          "type": "string",
                          "description": "creatorId"
                        },
                        "createdAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "createdAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "updaterId": {
                          "type": "string",
                          "description": "updaterId"
                        },
                        "updatedAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "updatedAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "name": {
                          "type": "string"
                        },
                        "price": {
                          "type": "number"
                        },
                        "_q": {
                          "type": "string",
                          "description": "Additional query part to forward to MongoDB"
                        }
                      },
                      "additionalProperties": false
                    },
                    "update": {
                      "type": "object",
                      "properties": {
                        "$set": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string"
                            },
                            "price": {
                              "type": "number"
                            },
                            "dishes": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              }
                            },
                            "dishes.$.replace": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$unset": {
                          "type": "object",
                          "properties": {
                            "price": {
                              "type": "boolean",
                              "enum": [
                                true
                              ]
                            },
                            "dishes": {
                              "type": "boolean",
                              "enum": [
                                true
                              ]
                            }
                          },
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$inc": {
                          "type": "object",
                          "properties": {
                            "price": {
                              "type": "number"
                            }
                          },
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$mul": {
                          "type": "object",
                          "properties": {
                            "price": {
                              "type": "number"
                            }
                          },
                          "additionalProperties": false,
                          "patternProperties": {}
                        },
                        "$currentDate": {
                          "type": "object",
                          "properties": {},
                          "additionalProperties": false
                        },
                        "$push": {
                          "type": "object",
                          "properties": {
                            "dishes": {
                              "type": "string"
                            }
                          },
                          "additionalProperties": false
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "filter",
                    "update"
                  ]
                },
                "minItems": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0
                }
              }
            }
          }
        }
      }
    },
    "/v2/menu/upsert-one": {
      "post": {
        "summary": "Update an item of menu if it is present, otherwise insert it",
        "tags": [
          "Menu"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "price",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list",
            "required": false,
            "name": "_st",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
              "default": "PUBLIC"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "$set": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "price": {
                        "type": "number"
                      },
                      "dishes": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "dishes.$.replace": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$unset": {
                    "type": "object",
                    "properties": {
                      "price": {
                        "type": "boolean",
                        "enum": [
                          true
                        ]
                      },
                      "dishes": {
                        "type": "boolean",
                        "enum": [
                          true
                        ]
                      }
                    },
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$inc": {
                    "type": "object",
                    "properties": {
                      "price": {
                        "type": "number"
                      }
                    },
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$mul": {
                    "type": "object",
                    "properties": {
                      "price": {
                        "type": "number"
                      }
                    },
                    "additionalProperties": false,
                    "patternProperties": {}
                  },
                  "$currentDate": {
                    "type": "object",
                    "properties": {},
                    "additionalProperties": false
                  },
                  "$push": {
                    "type": "object",
                    "properties": {
                      "dishes": {
                        "type": "string"
                      }
                    },
                    "additionalProperties": false
                  },
                  "$setOnInsert": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "price": {
                        "type": "number"
                      },
                      "dishes": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Default Response",
            "content": {
              "*/*": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "_id",
                      "example": "60a24a2a28a75f0013d7e426"
                    },
                    "creatorId": {
                      "type": "string",
                      "description": "creatorId"
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "createdAt"
                    },
                    "updaterId": {
                      "type": "string",
                      "description": "updaterId"
                    },
                    "updatedAt": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2020-09-16T12:00:00.000Z",
                      "description": "updatedAt"
                    },
                    "__STATE__": {
                      "type": "string",
                      "description": "__STATE__"
                    },
                    "name": {
                      "type": "string"
                    },
                    "price": {
                      "type": "number"
                    },
                    "dishes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v2/menu/{id}/state": {
      "post": {
        "summary": "Change state of an item of menu",
        "tags": [
          "Menu"
        ],
        "parameters": [
          {
            "description": "creatorId",
            "required": false,
            "name": "creatorId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "createdAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "createdAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "description": "updaterId",
            "required": false,
            "name": "updaterId",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "updatedAt",
            "example": "2020-09-16T12:00:00.000Z",
            "required": false,
            "name": "updatedAt",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$"
            }
          },
          {
            "required": false,
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "required": false,
            "name": "price",
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "description": "Additional query part to forward to MongoDB",
            "required": false,
            "name": "_q",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "the doc _id",
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Body8"
        },
        "responses": {
          "200": {
            "description": "Default Response"
          }
        }
      }
    },
    "/v2/menu/state": {
      "post": {
        "summary": "Change state of items of menu",
        "tags": [
          "Menu"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "filter": {
                      "type": "object",
                      "required": [
                        "_id"
                      ],
                      "properties": {
                        "_id": {
                          "type": "string",
                          "pattern": "^[a-fA-F\\d]{24}$",
                          "description": "Hexadecimal identifier of the document in the collection",
                          "example": "60a24a2a28a75f0013d7e4ad"
                        },
                        "creatorId": {
                          "type": "string",
                          "description": "creatorId"
                        },
                        "createdAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "createdAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "updaterId": {
                          "type": "string",
                          "description": "updaterId"
                        },
                        "updatedAt": {
                          "type": "string",
                          "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                          "description": "updatedAt",
                          "example": "2020-09-16T12:00:00.000Z"
                        },
                        "name": {
                          "type": "string"
                        },
                        "price": {
                          "type": "number"
                        }
                      }
                    },
                    "stateTo": {
                      "type": "string",
                      "enum": [
                        "PUBLIC",
                        "DRAFT",
                        "TRASH",
                        "DELETED"
                      ]
                    }
                  },
                  "required": [
                    "filter",
                    "stateTo"
                  ],
                  "additionalProperties": false
                },
                "minItems": 1
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Number of updated menu",
            "content": {
              "*/*": {
                "schema": {
                  "type": "integer",
                  "minimum": 0,
                  "description": "Number of updated menu"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "APISecretHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "secret"
      }
    },
    "requestBodies": {
      "Body": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "$set": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "image": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "allergene": {
                      "type": "boolean"
                    },
                    "image.$.replace": {
                      "type": "object",
                      "additionalProperties": true
                    },
                    "image.$.merge": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$unset": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "description": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "image": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "allergene": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$inc": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$mul": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$currentDate": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                },
                "$push": {
                  "type": "object",
                  "properties": {
                    "image": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          }
        }
      },
      "Body2": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "$set": {
                  "type": "object",
                  "properties": {
                    "surname": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "number",
                      "description": "phone number"
                    },
                    "ratings": {
                      "type": "string",
                      "description": "3 star, 2 star, 1 star"
                    },
                    "position": {
                      "type": "array",
                      "items": {
                        "type": "number"
                      },
                      "minItems": 2,
                      "maxItems": 3
                    },
                    "trasportType": {
                      "type": "string",
                      "description": "Es: bike, scooter, car, etc..."
                    },
                    "image": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "image.$.replace": {
                      "type": "object",
                      "additionalProperties": true
                    },
                    "image.$.merge": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$unset": {
                  "type": "object",
                  "properties": {
                    "surname": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "name": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "email": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "phone": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "ratings": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "position": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "trasportType": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "image": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$inc": {
                  "type": "object",
                  "properties": {
                    "phone": {
                      "type": "number"
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$mul": {
                  "type": "object",
                  "properties": {
                    "phone": {
                      "type": "number"
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$currentDate": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                },
                "$push": {
                  "type": "object",
                  "properties": {
                    "image": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          }
        }
      },
      "Body3": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "$set": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "label shown in CMS eg: Pending"
                    },
                    "statusId": {
                      "type": "string",
                      "description": "eg: PENDING"
                    },
                    "step": {
                      "nullable": true,
                      "description": "null if must not to be generated order by data-generator with this status. ",
                      "type": "number"
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$unset": {
                  "type": "object",
                  "properties": {
                    "statusId": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "step": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$inc": {
                  "type": "object",
                  "properties": {
                    "step": {
                      "type": "number"
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$mul": {
                  "type": "object",
                  "properties": {
                    "step": {
                      "type": "number"
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$currentDate": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                },
                "$push": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          }
        }
      },
      "Body4": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "$set": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "price": {
                      "type": "number"
                    },
                    "dishes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "dishes.$.replace": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$unset": {
                  "type": "object",
                  "properties": {
                    "price": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "dishes": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$inc": {
                  "type": "object",
                  "properties": {
                    "price": {
                      "type": "number"
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$mul": {
                  "type": "object",
                  "properties": {
                    "price": {
                      "type": "number"
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$currentDate": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                },
                "$push": {
                  "type": "object",
                  "properties": {
                    "dishes": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          }
        }
      },
      "Body5": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "$set": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "ingredients": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "price": {
                      "type": "number"
                    },
                    "calories": {
                      "type": "number"
                    },
                    "image": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "ingredients.$.replace": {
                      "type": "string"
                    },
                    "image.$.replace": {
                      "type": "object",
                      "additionalProperties": true
                    },
                    "image.$.merge": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$unset": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "calories": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "image": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$inc": {
                  "type": "object",
                  "properties": {
                    "price": {
                      "type": "number"
                    },
                    "calories": {
                      "type": "number"
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$mul": {
                  "type": "object",
                  "properties": {
                    "price": {
                      "type": "number"
                    },
                    "calories": {
                      "type": "number"
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$currentDate": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                },
                "$push": {
                  "type": "object",
                  "properties": {
                    "ingredients": {
                      "type": "string"
                    },
                    "image": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          }
        }
      },
      "Body6": {
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "filter": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "Hexadecimal identifier of the document in the collection",
                        "example": "60a24a2b28a75f0013d7e4b4"
                      },
                      "_st": {
                        "type": "string",
                        "pattern": "(PUBLIC|DRAFT|TRASH|DELETED)(,(PUBLIC|DRAFT|TRASH|DELETED))*",
                        "default": "PUBLIC",
                        "description": "Filter by \\_\\_STATE__, multiple states can be specified in OR by providing a comma separated list"
                      },
                      "creatorId": {
                        "type": "string",
                        "description": "creatorId"
                      },
                      "createdAt": {
                        "type": "string",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                        "description": "createdAt",
                        "example": "2020-09-16T12:00:00.000Z"
                      },
                      "updaterId": {
                        "type": "string",
                        "description": "updaterId"
                      },
                      "updatedAt": {
                        "type": "string",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                        "description": "updatedAt",
                        "example": "2020-09-16T12:00:00.000Z"
                      },
                      "riderId": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "Hexadecimal identifier of the document in the collection",
                        "example": "60a24a2a28a75f0013d7e439"
                      },
                      "totalPrice": {
                        "type": "number"
                      },
                      "address": {
                        "type": "string"
                      },
                      "isLate": {
                        "type": "boolean"
                      },
                      "status": {
                        "type": "string",
                        "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING"
                      },
                      "orderedAt": {
                        "type": "string",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                        "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
                        "example": "2020-09-16T12:00:00.000Z"
                      },
                      "customerId": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "Hexadecimal identifier of the document in the collection",
                        "example": "60a24a2a28a75f0013d7e43a"
                      },
                      "provinceId": {
                        "type": "string",
                        "description": "_id of the province of the order"
                      },
                      "_q": {
                        "type": "string",
                        "description": "Additional query part to forward to MongoDB"
                      }
                    },
                    "additionalProperties": false
                  },
                  "update": {
                    "type": "object",
                    "properties": {
                      "$set": {
                        "type": "object",
                        "properties": {
                          "dishes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "riderId": {
                            "type": "string",
                            "pattern": "^[a-fA-F\\d]{24}$",
                            "description": "Hexadecimal identifier of the document in the collection",
                            "example": "60a24a2a28a75f0013d7e43b"
                          },
                          "totalPrice": {
                            "type": "number"
                          },
                          "address": {
                            "type": "string"
                          },
                          "isLate": {
                            "type": "boolean"
                          },
                          "status": {
                            "type": "string",
                            "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING"
                          },
                          "orderedAt": {
                            "type": "string",
                            "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                            "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
                            "example": "2020-09-16T12:00:00.000Z"
                          },
                          "customerId": {
                            "type": "string",
                            "pattern": "^[a-fA-F\\d]{24}$",
                            "description": "Hexadecimal identifier of the document in the collection",
                            "example": "60a24a2a28a75f0013d7e43c"
                          },
                          "statusHistory": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "additionalProperties": true
                            }
                          },
                          "provinceId": {
                            "type": "string",
                            "description": "_id of the province of the order"
                          },
                          "dishes.$.replace": {
                            "type": "string"
                          },
                          "statusHistory.$.replace": {
                            "type": "object",
                            "additionalProperties": true
                          },
                          "statusHistory.$.merge": {
                            "type": "object",
                            "additionalProperties": true
                          }
                        },
                        "additionalProperties": false,
                        "patternProperties": {}
                      },
                      "$unset": {
                        "type": "object",
                        "properties": {
                          "isLate": {
                            "type": "boolean",
                            "enum": [
                              true
                            ]
                          },
                          "customerId": {
                            "type": "boolean",
                            "enum": [
                              true
                            ]
                          }
                        },
                        "additionalProperties": false,
                        "patternProperties": {}
                      },
                      "$inc": {
                        "type": "object",
                        "properties": {
                          "totalPrice": {
                            "type": "number"
                          }
                        },
                        "additionalProperties": false,
                        "patternProperties": {}
                      },
                      "$mul": {
                        "type": "object",
                        "properties": {
                          "totalPrice": {
                            "type": "number"
                          }
                        },
                        "additionalProperties": false,
                        "patternProperties": {}
                      },
                      "$currentDate": {
                        "type": "object",
                        "properties": {
                          "orderedAt": {
                            "type": "boolean",
                            "enum": [
                              true
                            ]
                          }
                        },
                        "additionalProperties": false
                      },
                      "$push": {
                        "type": "object",
                        "properties": {
                          "dishes": {
                            "type": "string"
                          },
                          "statusHistory": {
                            "type": "object",
                            "additionalProperties": true
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "additionalProperties": false
                  }
                },
                "required": [
                  "filter",
                  "update"
                ]
              },
              "minItems": 1
            }
          }
        }
      },
      "Body7": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "$set": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "size": {
                      "type": "number"
                    },
                    "location": {
                      "type": "string"
                    },
                    "file": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$unset": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "size": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "location": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "file": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$inc": {
                  "type": "object",
                  "properties": {
                    "size": {
                      "type": "number"
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$mul": {
                  "type": "object",
                  "properties": {
                    "size": {
                      "type": "number"
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$currentDate": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                },
                "$push": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          }
        }
      },
      "Body8": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "stateTo"
              ],
              "properties": {
                "stateTo": {
                  "type": "string",
                  "enum": [
                    "PUBLIC",
                    "TRASH",
                    "DRAFT",
                    "DELETED"
                  ]
                }
              }
            }
          }
        }
      },
      "Body9": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "dishes",
                "riderId",
                "totalPrice",
                "address",
                "status",
                "orderedAt",
                "statusHistory",
                "provinceId"
              ],
              "properties": {
                "dishes": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "riderId": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "Hexadecimal identifier of the document in the collection",
                  "example": "60a24a2a28a75f0013d7e441"
                },
                "totalPrice": {
                  "type": "number"
                },
                "address": {
                  "type": "string"
                },
                "isLate": {
                  "type": "boolean"
                },
                "status": {
                  "type": "string",
                  "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING"
                },
                "orderedAt": {
                  "type": "string",
                  "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                  "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
                  "example": "2020-09-16T12:00:00.000Z"
                },
                "customerId": {
                  "type": "string",
                  "pattern": "^[a-fA-F\\d]{24}$",
                  "description": "Hexadecimal identifier of the document in the collection",
                  "example": "60a24a2a28a75f0013d7e442"
                },
                "statusHistory": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "additionalProperties": true
                  }
                },
                "provinceId": {
                  "type": "string",
                  "description": "_id of the province of the order"
                },
                "__STATE__": {
                  "type": "string",
                  "enum": [
                    "PUBLIC",
                    "DRAFT",
                    "TRASH",
                    "DELETED"
                  ],
                  "description": "The state of the document",
                  "default": "PUBLIC"
                }
              },
              "additionalProperties": false
            }
          }
        }
      },
      "Body10": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "$set": {
                  "type": "object",
                  "properties": {
                    "dishes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "riderId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e43b"
                    },
                    "totalPrice": {
                      "type": "number"
                    },
                    "address": {
                      "type": "string"
                    },
                    "isLate": {
                      "type": "boolean"
                    },
                    "status": {
                      "type": "string",
                      "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING"
                    },
                    "orderedAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
                      "example": "2020-09-16T12:00:00.000Z"
                    },
                    "customerId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e43c"
                    },
                    "statusHistory": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "provinceId": {
                      "type": "string",
                      "description": "_id of the province of the order"
                    },
                    "dishes.$.replace": {
                      "type": "string"
                    },
                    "statusHistory.$.replace": {
                      "type": "object",
                      "additionalProperties": true
                    },
                    "statusHistory.$.merge": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$unset": {
                  "type": "object",
                  "properties": {
                    "isLate": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "customerId": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$inc": {
                  "type": "object",
                  "properties": {
                    "totalPrice": {
                      "type": "number"
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$mul": {
                  "type": "object",
                  "properties": {
                    "totalPrice": {
                      "type": "number"
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$currentDate": {
                  "type": "object",
                  "properties": {
                    "orderedAt": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "$push": {
                  "type": "object",
                  "properties": {
                    "dishes": {
                      "type": "string"
                    },
                    "statusHistory": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          }
        }
      },
      "Body11": {
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "required": [
                  "dishes",
                  "riderId",
                  "totalPrice",
                  "address",
                  "status",
                  "orderedAt",
                  "statusHistory",
                  "provinceId"
                ],
                "properties": {
                  "dishes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "riderId": {
                    "type": "string",
                    "pattern": "^[a-fA-F\\d]{24}$",
                    "description": "Hexadecimal identifier of the document in the collection",
                    "example": "60a24a2a28a75f0013d7e441"
                  },
                  "totalPrice": {
                    "type": "number"
                  },
                  "address": {
                    "type": "string"
                  },
                  "isLate": {
                    "type": "boolean"
                  },
                  "status": {
                    "type": "string",
                    "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING"
                  },
                  "orderedAt": {
                    "type": "string",
                    "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                    "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
                    "example": "2020-09-16T12:00:00.000Z"
                  },
                  "customerId": {
                    "type": "string",
                    "pattern": "^[a-fA-F\\d]{24}$",
                    "description": "Hexadecimal identifier of the document in the collection",
                    "example": "60a24a2a28a75f0013d7e442"
                  },
                  "statusHistory": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "provinceId": {
                    "type": "string",
                    "description": "_id of the province of the order"
                  },
                  "__STATE__": {
                    "type": "string",
                    "enum": [
                      "PUBLIC",
                      "DRAFT",
                      "TRASH",
                      "DELETED"
                    ],
                    "description": "The state of the document",
                    "default": "PUBLIC"
                  }
                },
                "additionalProperties": false
              }
            }
          }
        }
      },
      "Body12": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "$set": {
                  "type": "object",
                  "properties": {
                    "dishes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "riderId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e43d"
                    },
                    "totalPrice": {
                      "type": "number"
                    },
                    "address": {
                      "type": "string"
                    },
                    "isLate": {
                      "type": "boolean"
                    },
                    "status": {
                      "type": "string",
                      "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING"
                    },
                    "orderedAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
                      "example": "2020-09-16T12:00:00.000Z"
                    },
                    "customerId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e43e"
                    },
                    "statusHistory": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "provinceId": {
                      "type": "string",
                      "description": "_id of the province of the order"
                    },
                    "dishes.$.replace": {
                      "type": "string"
                    },
                    "statusHistory.$.replace": {
                      "type": "object",
                      "additionalProperties": true
                    },
                    "statusHistory.$.merge": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$unset": {
                  "type": "object",
                  "properties": {
                    "isLate": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "customerId": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$inc": {
                  "type": "object",
                  "properties": {
                    "totalPrice": {
                      "type": "number"
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$mul": {
                  "type": "object",
                  "properties": {
                    "totalPrice": {
                      "type": "number"
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$currentDate": {
                  "type": "object",
                  "properties": {
                    "orderedAt": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  },
                  "additionalProperties": false
                },
                "$push": {
                  "type": "object",
                  "properties": {
                    "dishes": {
                      "type": "string"
                    },
                    "statusHistory": {
                      "type": "object",
                      "additionalProperties": true
                    }
                  },
                  "additionalProperties": false
                },
                "$setOnInsert": {
                  "type": "object",
                  "properties": {
                    "dishes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "riderId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e43f"
                    },
                    "totalPrice": {
                      "type": "number"
                    },
                    "address": {
                      "type": "string"
                    },
                    "isLate": {
                      "type": "boolean"
                    },
                    "status": {
                      "type": "string",
                      "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING"
                    },
                    "orderedAt": {
                      "type": "string",
                      "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                      "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
                      "example": "2020-09-16T12:00:00.000Z"
                    },
                    "customerId": {
                      "type": "string",
                      "pattern": "^[a-fA-F\\d]{24}$",
                      "description": "Hexadecimal identifier of the document in the collection",
                      "example": "60a24a2a28a75f0013d7e440"
                    },
                    "statusHistory": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": true
                      }
                    },
                    "provinceId": {
                      "type": "string",
                      "description": "_id of the province of the order"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          }
        }
      },
      "Body13": {
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "filter": {
                    "type": "object",
                    "required": [
                      "_id"
                    ],
                    "properties": {
                      "_id": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "Hexadecimal identifier of the document in the collection",
                        "example": "60a24a2b28a75f0013d7e4b5"
                      },
                      "creatorId": {
                        "type": "string",
                        "description": "creatorId"
                      },
                      "createdAt": {
                        "type": "string",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                        "description": "createdAt",
                        "example": "2020-09-16T12:00:00.000Z"
                      },
                      "updaterId": {
                        "type": "string",
                        "description": "updaterId"
                      },
                      "updatedAt": {
                        "type": "string",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                        "description": "updatedAt",
                        "example": "2020-09-16T12:00:00.000Z"
                      },
                      "riderId": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "Hexadecimal identifier of the document in the collection",
                        "example": "60a24a2a28a75f0013d7e443"
                      },
                      "totalPrice": {
                        "type": "number"
                      },
                      "address": {
                        "type": "string"
                      },
                      "isLate": {
                        "type": "boolean"
                      },
                      "status": {
                        "type": "string",
                        "description": "Order status. It is the statusId of one item of the status collection. eg: PENDING"
                      },
                      "orderedAt": {
                        "type": "string",
                        "pattern": "^\\d{4}-\\d{2}-\\d{2}(T\\d{2}:\\d{2}:\\d{2}(\\.\\d{1,3})?(Z|[+-]\\d{2}:\\d{2}))?$",
                        "description": "\"date-time\" according with https://tools.ietf.org/html/rfc3339#section-5.6",
                        "example": "2020-09-16T12:00:00.000Z"
                      },
                      "customerId": {
                        "type": "string",
                        "pattern": "^[a-fA-F\\d]{24}$",
                        "description": "Hexadecimal identifier of the document in the collection",
                        "example": "60a24a2a28a75f0013d7e444"
                      },
                      "statusHistory": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "additionalProperties": true
                        }
                      },
                      "provinceId": {
                        "type": "string",
                        "description": "_id of the province of the order"
                      }
                    }
                  },
                  "stateTo": {
                    "type": "string",
                    "enum": [
                      "PUBLIC",
                      "DRAFT",
                      "TRASH",
                      "DELETED"
                    ]
                  }
                },
                "required": [
                  "filter",
                  "stateTo"
                ],
                "additionalProperties": false
              },
              "minItems": 1
            }
          }
        }
      },
      "Body14": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "$set": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "_order": {
                      "type": "number"
                    },
                    "icon": {
                      "type": "string"
                    },
                    "link": {
                      "type": "string"
                    },
                    "iframe": {
                      "type": "boolean"
                    },
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "groups.$.replace": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$unset": {
                  "type": "object",
                  "properties": {
                    "_order": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$inc": {
                  "type": "object",
                  "properties": {
                    "_order": {
                      "type": "number"
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$mul": {
                  "type": "object",
                  "properties": {
                    "_order": {
                      "type": "number"
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$currentDate": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                },
                "$push": {
                  "type": "object",
                  "properties": {
                    "groups": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          }
        }
      },
      "Body15": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "$set": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "deliveryAddress": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "number"
                    },
                    "surname": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$unset": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "email": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "deliveryAddress": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "phone": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    },
                    "surname": {
                      "type": "boolean",
                      "enum": [
                        true
                      ]
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$inc": {
                  "type": "object",
                  "properties": {
                    "phone": {
                      "type": "number"
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$mul": {
                  "type": "object",
                  "properties": {
                    "phone": {
                      "type": "number"
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$currentDate": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                },
                "$push": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          }
        }
      },
      "Body16": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "$set": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "es: mi"
                    },
                    "countryCode": {
                      "type": "string",
                      "description": "es: it"
                    },
                    "name": {
                      "type": "string",
                      "description": "es: Milano"
                    },
                    "weight": {
                      "type": "number",
                      "description": "used for data generation purpose. value from 0 to 1"
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$unset": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$inc": {
                  "type": "object",
                  "properties": {
                    "weight": {
                      "type": "number"
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$mul": {
                  "type": "object",
                  "properties": {
                    "weight": {
                      "type": "number"
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$currentDate": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                },
                "$push": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          }
        }
      },
      "Body17": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "$set": {
                  "type": "object",
                  "properties": {
                    "mymsg": {
                      "type": "string"
                    },
                    "who": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$unset": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$inc": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$mul": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false,
                  "patternProperties": {}
                },
                "$currentDate": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                },
                "$push": {
                  "type": "object",
                  "properties": {},
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          }
        }
      }
    }
  },
  "tags": []
}
